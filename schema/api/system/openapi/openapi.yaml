openapi: 3.0.2
info:
  title: System API
  description: System API
  version: 1.0.0
paths:
  /api/v1/ping:
    get:
      summary: Checks if the server is running
      operationId: Ping
      tags:
        - HealthCheck
      responses:
        '200':
          description: Ping response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Ping response message
                    example: pong
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/auth/otp:
    post:
      summary: Send OTP
      operationId: APIV1AuthByOtp
      tags:
        - Auth
      description: One Time Password (OTP) to user.
      requestBody:
        $ref: '#/components/requestBodies/AuthByOtpPost'
      responses:
        '200':
          description: OTP has been sent successfully.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '429':
          $ref: '#/components/responses/TooManyRequestsError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/auth/otp/verify:
    post:
      summary: Verify OTP
      operationId: APIV1VerifyOTP
      tags:
        - Auth
      description: Verify OTP sent by user.
      requestBody:
        $ref: '#/components/requestBodies/AuthVerifyPost'
      responses:
        '200':
          $ref: '#/components/responses/AuthVerifyOTPResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '429':
          $ref: '#/components/responses/TooManyRequestsError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/auth/invitations/process/email:
    post:
      summary: Process an invitation by verifying token and email
      operationId: APIV1ProcessInvitationEmail
      tags:
        - ProcessInvitation
      requestBody:
        $ref: '#/components/requestBodies/InvitationProcessEmail'
      responses:
        '200':
          description: OTP has been sent successfully.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/auth/invitations/process/oauth:
    post:
      summary: >-
        Process an invitation by verifying token and OAuth, and register or add
        user to workspace.
      operationId: APIV1ProcessInvitationOAuth
      tags:
        - ProcessInvitation
      security:
        - bearer: []
      requestBody:
        $ref: '#/components/requestBodies/InvitationProcessOAuth'
      responses:
        '200':
          $ref: '#/components/responses/InvitationProcessOAuthResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/auth/invitations:
    get:
      summary: Get Invitation by token
      operationId: APIV1GetInvitationByToken
      tags:
        - ProcessInvitation
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
            format: uuid
          description: Invitation token
      responses:
        '200':
          $ref: '#/components/responses/GetInvitationByTokenResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '410':
          $ref: '#/components/responses/GoneError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/auth/oauth:
    post:
      summary: Auth by OAuth
      operationId: APIV1AuthByOAuth
      tags:
        - Auth
      description: Auth by OAuth.
      security:
        - bearer: []
      responses:
        '200':
          $ref: '#/components/responses/AuthByOAuthResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/me:
    get:
      summary: Get Admin User
      operationId: APIV1GetMe
      description: Returns the admin user
      tags:
        - Me
      security:
        - bearer: []
      responses:
        '200':
          $ref: '#/components/responses/MeResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/me/profile:
    put:
      summary: Update Profile
      operationId: APIV1UpdateProfile
      description: Updates the user profile
      tags:
        - Me
      security:
        - bearer: []
      requestBody:
        $ref: '#/components/requestBodies/UpdateMeProfile'
      responses:
        '200':
          $ref: '#/components/responses/UpdateProfileResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/me/profile/photo:
    put:
      summary: Update Profile Photo
      operationId: APIV1UpdateProfilePhoto
      description: Updates the user profile photo
      tags:
        - Me
      security:
        - bearer: []
      requestBody:
        $ref: '#/components/requestBodies/UpdateMeProfilePhoto'
      responses:
        '200':
          $ref: '#/components/responses/UpdateProfilePhotoResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Delete Profile Photo
      operationId: APIV1RemoveProfilePhoto
      description: Deletes the user profile photo
      tags:
        - Me
      security:
        - bearer: []
      responses:
        '200':
          $ref: '#/components/responses/RemoveProfilePhotoResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/me/member/profile:
    put:
      summary: Update Me Member Profile
      operationId: APIV1UpdateMeMemberProfile
      description: Updates Me the member profile
      tags:
        - Me
      security:
        - bearer: []
      requestBody:
        $ref: '#/components/requestBodies/UpdateMeMemberProfile'
      responses:
        '200':
          $ref: '#/components/responses/UpdateMeMemberProfileResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/me/workspace/leave:
    post:
      summary: Leave Workspace
      operationId: APIV1LeaveWorkspace
      description: Leaves the workspace
      tags:
        - Me
      security:
        - bearer: []
      responses:
        '204':
          description: Workspace left
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/workspaces:
    get:
      summary: Get Joined Workspaces
      operationId: APIV1GetWorkspaces
      description: Returns the workspaces the user is a member of
      tags:
        - Workspace
      security:
        - bearer: []
      responses:
        '200':
          $ref: '#/components/responses/WorkspacesResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Create Workspace
      operationId: APIV1CreateWorkspace
      description: Creates a new workspace
      tags:
        - Workspace
      security:
        - bearer: []
      requestBody:
        $ref: '#/components/requestBodies/CreateWorkspace'
      responses:
        '201':
          $ref: '#/components/responses/CreateWorkspaceResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/workspaces/{workspaceId}:
    put:
      summary: Update Workspace
      operationId: APIV1UpdateWorkspace
      description: Updates the workspace
      tags:
        - Workspace
      security:
        - bearer: []
      parameters:
        - name: workspaceId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Workspace id
      requestBody:
        $ref: '#/components/requestBodies/UpdateWorkspace'
      responses:
        '200':
          $ref: '#/components/responses/UpdateWorkspaceResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/members:
    get:
      summary: Get Members
      operationId: APIV1GetMembers
      description: Returns the members of the workspace
      tags:
        - Member
      security:
        - bearer: []
      responses:
        '200':
          $ref: '#/components/responses/MembersResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/members/{memberId}:
    delete:
      summary: Remove Member
      operationId: APIV1RemoveMember
      description: Removes a member from the workspace
      tags:
        - Member
      security:
        - bearer: []
      parameters:
        - name: memberId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Member id
      responses:
        '204':
          description: Member removed
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/members/{memberId}/role:
    put:
      summary: Update Member Role
      operationId: APIV1UpdateMemberRole
      description: Updates the role of a member
      tags:
        - Member
      security:
        - bearer: []
      parameters:
        - name: memberId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Member id
      requestBody:
        $ref: '#/components/requestBodies/UpdateMemberRole'
      responses:
        '200':
          $ref: '#/components/responses/UpdateMemberRoleResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/invitations:
    get:
      summary: Get pending invitations
      operationId: APIV1GetInvitations
      description: Returns the pending invitations (not used yet)
      tags:
        - Invitation
      security:
        - bearer: []
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum:
              - accepted
          description: Invitation status
      responses:
        '200':
          $ref: '#/components/responses/InvitationsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/members/invitations/bulk:
    post:
      summary: Invite multiple users to the workspace by email
      operationId: APIV1InviteMultipleUsers
      tags:
        - Invitation
      security:
        - bearer: []
      requestBody:
        $ref: '#/components/requestBodies/InvitationsBulk'
      responses:
        '200':
          $ref: '#/components/responses/InvitationsBulkResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/members/invitations/{invitationId}/accept:
    post:
      summary: Accept an invitation to join a workspace
      operationId: APIV1AcceptInvitation
      tags:
        - Me
      security:
        - bearer: []
      parameters:
        - name: invitationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Invitation token
      responses:
        '200':
          $ref: '#/components/responses/InvitationsAcceptResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '410':
          $ref: '#/components/responses/GoneError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/members/invitations/{invitationId}/revoke:
    post:
      summary: Revoke invitation
      operationId: APIV1RevokeInvitation
      tags:
        - Invitation
      security:
        - bearer: []
      parameters:
        - name: invitationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Invitation id
      responses:
        '200':
          $ref: '#/components/responses/RevokeInvitationResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/members/invitations/{invitationId}/resend:
    post:
      summary: Resend invitation
      operationId: APIV1ResendInvitation
      tags:
        - Invitation
      security:
        - bearer: []
      parameters:
        - name: invitationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Invitation id
      responses:
        '200':
          $ref: '#/components/responses/ResendInvitationResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  securitySchemes:
    bearer:
      type: http
      description: JWT Token Authentication
      scheme: bearer
      bearerFormat: JWT
  schemas:
    JwtToken:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          description: JWT token
    AuthProvider:
      type: string
      description: Authentication provider
      enum:
        - email
        - google
    User:
      type: object
      required:
        - userId
        - email
      properties:
        userId:
          type: string
          format: uuid
        email:
          type: string
          format: email
        name:
          type: string
        phoneNumber:
          type: string
        photo:
          type: string
          format: uri
    MultiFactor:
      type: object
      required:
        - factorId
        - phoneNumber
      properties:
        factorId:
          type: string
        phoneNumber:
          type: string
    Workspace:
      type: object
      required:
        - workspaceId
        - name
        - subdomain
      properties:
        workspaceId:
          type: string
          format: uuid
          description: workspace id in the format of UUID v7.
          example: 123e4567-e89b-12d3-a456-426614174000
        name:
          type: string
          description: workspace name
        subdomain:
          type: string
          description: workspace subdomain (e.x. example-test)
    Workspaces:
      type: array
      items:
        $ref: '#/components/schemas/Workspace'
    Inviter:
      type: object
      required:
        - member
        - workspace
      properties:
        member:
          $ref: '#/components/schemas/Member'
        workspace:
          $ref: '#/components/schemas/Workspace'
    Member:
      type: object
      required:
        - id
        - user
        - profile
        - role
        - membershipStatus
      properties:
        id:
          type: string
          format: uuid
        profile:
          $ref: '#/components/schemas/MemberProfile'
        user:
          $ref: '#/components/schemas/User'
        role:
          $ref: '#/components/schemas/MemberRole'
        membershipStatus:
          type: string
          enum:
            - ACTIVE
            - LEFT
    MemberRole:
      type: string
      description: Role of the member
      enum:
        - OWNER
        - ADMIN
        - MEMBER
        - GUEST
    MemberProfile:
      type: object
      required:
        - displayName
      properties:
        displayName:
          type: string
        idNumber:
          type: string
        bio:
          type: string
          description: User's bio
    Members:
      type: array
      items:
        $ref: '#/components/schemas/Member'
    Invitation:
      type: object
      required:
        - id
        - accepted
        - expiredAt
        - inviteeEmail
        - displayName
        - inviter
      properties:
        id:
          type: string
          format: uuid
          description: Invitation ID
        accepted:
          type: boolean
        expiredAt:
          type: string
          format: date-time
        inviteeEmail:
          type: string
          format: email
          description: Email of the invitee
        displayName:
          type: string
          description: Display name of the invitee
        inviter:
          $ref: '#/components/schemas/Member'
    Invitations:
      type: array
      items:
        $ref: '#/components/schemas/Invitation'
    Invitee:
      type: object
      required:
        - name
        - email
      properties:
        name:
          type: string
          description: Display name of the invitee
        email:
          type: string
          format: email
          description: Email of the invitee
    Invitees:
      type: array
      items:
        $ref: '#/components/schemas/Invitee'
    MembershipPeriod:
      type: object
      required:
        - start
        - end
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
    Me:
      type: object
      required:
        - self
        - joinedWorkspaces
      properties:
        self:
          $ref: '#/components/schemas/User'
        member:
          $ref: '#/components/schemas/Member'
        currentWorkspace:
          $ref: '#/components/schemas/Workspace'
        joinedWorkspaces:
          type: array
          items:
            $ref: '#/components/schemas/Workspace'
        receivedInvitations:
          type: array
          items:
            $ref: '#/components/schemas/ReceivedInvitation'
        providers:
          type: array
          items:
            $ref: '#/components/schemas/AuthProvider'
    ReceivedInvitation:
      type: object
      required:
        - invitation
        - inviter
      properties:
        invitation:
          $ref: '#/components/schemas/Invitation'
        inviter:
          $ref: '#/components/schemas/Inviter'
  requestBodies:
    AuthByOtpPost:
      description: Authenticate user by OTP.
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
            required:
              - email
    AuthVerifyPost:
      description: Verify OTP sent by user.
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
              otp:
                type: string
            required:
              - email
              - otp
    CreateWorkspace:
      description: Creates a new workspace
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - subdomain
            properties:
              subdomain:
                type: string
                description: workspace subdomain (e.x. example-test)
    UpdateMeProfile:
      description: Update Me Profile
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - profile
            properties:
              profile:
                type: object
                properties:
                  name:
                    type: string
    UpdateMeProfilePhoto:
      description: Update Me Profile Photo
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            required:
              - photo
            properties:
              photo:
                type: string
                format: binary
    InvitationProcessEmail:
      description: >-
        Process an invitation by verifying token and email, and register or add
        user to workspace.
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              token:
                type: string
                format: uuid
                description: The invitation token.
              email:
                type: string
                format: email
                description: The user's email address.
            required:
              - token
              - email
    InvitationProcessOAuth:
      description: >-
        Process an invitation by verifying token and OAuth, and register or add
        user to workspace.
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              token:
                type: string
                format: uuid
                description: The invitation token.
            required:
              - token
    InvitationsBulk:
      required: true
      description: Bulk invite users to workspace
      content:
        application/json:
          schema:
            type: object
            properties:
              invitees:
                type: array
                items:
                  $ref: '#/components/schemas/Invitee'
    UpdateMeMemberProfile:
      description: Update Me Member Profile
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - memberProfile
            properties:
              memberProfile:
                $ref: '#/components/schemas/MemberProfile'
    UpdateMemberRole:
      required: true
      description: Update member role
      content:
        application/json:
          schema:
            type: object
            required:
              - role
            properties:
              role:
                type: string
                enum:
                  - admin
                  - member
                  - guest
    UpdateWorkspace:
      description: Update workspace
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: workspace name
              subdomain:
                type: string
                description: workspace subdomain
  responses:
    GeneralError:
      description: General Error
      content:
        application/json:
          schema:
            type: object
            description: RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807
            properties:
              status:
                type: integer
                example: 400
                description: >-
                  The HTTP status code generated for this occurrence of the
                  problem.
              title:
                type: string
                description: A short, human-readable summary of the problem type
              detail:
                type: string
                description: >-
                  A human-readable explanation specific to this occurrence of
                  the problem.
              code:
                type: string
                example: 400-001
                description: A custom code identifying the specific error.
    BadRequestError:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            description: RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807
            properties:
              status:
                type: integer
                example: 400
                description: >-
                  The HTTP status code generated for this occurrence of the
                  problem.
              title:
                type: string
                description: A short, human-readable summary of the problem type
              detail:
                type: string
                description: >-
                  A human-readable explanation specific to this occurrence of
                  the problem.
              code:
                type: string
                example: 400-001
                description: A custom code identifying the specific error.
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            type: object
            description: RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807
            properties:
              status:
                type: integer
                example: 400
                description: >-
                  The HTTP status code generated for this occurrence of the
                  problem.
              title:
                type: string
                description: A short, human-readable summary of the problem type
              detail:
                type: string
                description: >-
                  A human-readable explanation specific to this occurrence of
                  the problem.
              code:
                type: string
                example: 400-001
                description: A custom code identifying the specific error.
    NotFoundError:
      description: Entity not found.
      content:
        application/json:
          schema:
            type: object
            description: RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807
            properties:
              status:
                type: integer
                example: 400
                description: >-
                  The HTTP status code generated for this occurrence of the
                  problem.
              title:
                type: string
                description: A short, human-readable summary of the problem type
              detail:
                type: string
                description: >-
                  A human-readable explanation specific to this occurrence of
                  the problem.
              code:
                type: string
                example: 400-001
                description: A custom code identifying the specific error.
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            description: RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807
            properties:
              status:
                type: integer
                example: 400
                description: >-
                  The HTTP status code generated for this occurrence of the
                  problem.
              title:
                type: string
                description: A short, human-readable summary of the problem type
              detail:
                type: string
                description: >-
                  A human-readable explanation specific to this occurrence of
                  the problem.
              code:
                type: string
                example: 400-001
                description: A custom code identifying the specific error.
    ConflictError:
      description: Conflict
      content:
        application/json:
          schema:
            type: object
            description: RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807
            properties:
              status:
                type: integer
                example: 400
                description: >-
                  The HTTP status code generated for this occurrence of the
                  problem.
              title:
                type: string
                description: A short, human-readable summary of the problem type
              detail:
                type: string
                description: >-
                  A human-readable explanation specific to this occurrence of
                  the problem.
              code:
                type: string
                example: 400-001
                description: A custom code identifying the specific error.
    GoneError:
      description: Gone
      content:
        application/json:
          schema:
            type: object
            description: RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807
            properties:
              status:
                type: integer
                example: 400
                description: >-
                  The HTTP status code generated for this occurrence of the
                  problem.
              title:
                type: string
                description: A short, human-readable summary of the problem type
              detail:
                type: string
                description: >-
                  A human-readable explanation specific to this occurrence of
                  the problem.
              code:
                type: string
                example: 400-001
                description: A custom code identifying the specific error.
    TooManyRequestsError:
      description: Too many requests
      content:
        application/json:
          schema:
            type: object
            description: RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807
            properties:
              status:
                type: integer
                example: 400
                description: >-
                  The HTTP status code generated for this occurrence of the
                  problem.
              title:
                type: string
                description: A short, human-readable summary of the problem type
              detail:
                type: string
                description: >-
                  A human-readable explanation specific to this occurrence of
                  the problem.
              code:
                type: string
                example: 400-001
                description: A custom code identifying the specific error.
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            description: RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807
            properties:
              status:
                type: integer
                example: 400
                description: >-
                  The HTTP status code generated for this occurrence of the
                  problem.
              title:
                type: string
                description: A short, human-readable summary of the problem type
              detail:
                type: string
                description: >-
                  A human-readable explanation specific to this occurrence of
                  the problem.
              code:
                type: string
                example: 400-001
                description: A custom code identifying the specific error.
    GetInvitationByTokenResponse:
      description: Get invitation by token
      content:
        application/json:
          schema:
            type: object
            required:
              - receivedInvitation
            properties:
              receivedInvitation:
                $ref: '#/components/schemas/ReceivedInvitation'
    InvitationsBulkResponse:
      description: Successfully sent invitations
      content:
        application/json:
          schema:
            type: object
            required:
              - total
              - successfulInvitations
              - failedInvitations
              - registeredInvitations
            properties:
              total:
                type: integer
                description: Total number of invitations
              successfulInvitations:
                $ref: '#/components/schemas/Invitations'
              failedInvitations:
                $ref: '#/components/schemas/Invitations'
              registeredInvitations:
                $ref: '#/components/schemas/Invitations'
    RevokeInvitationResponse:
      description: Invitations without the revoked one
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Invitations'
    ResendInvitationResponse:
      description: Resend invitation response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Invitation'
    WorkspacesResponse:
      description: Get joined workspaces
      content:
        application/json:
          schema:
            type: object
            required:
              - workspaces
            properties:
              workspaces:
                type: array
                items:
                  $ref: '#/components/schemas/Workspace'
    InvitationsResponse:
      description: Get workspace invitations
      content:
        application/json:
          schema:
            type: object
            required:
              - invitations
            properties:
              invitations:
                type: array
                items:
                  $ref: '#/components/schemas/Invitation'
    MembersResponse:
      description: Get workspace members
      content:
        application/json:
          schema:
            type: object
            required:
              - members
            properties:
              members:
                type: array
                items:
                  $ref: '#/components/schemas/Member'
    MeResponse:
      description: Me
      content:
        application/json:
          schema:
            type: object
            required:
              - me
            properties:
              me:
                $ref: '#/components/schemas/Me'
    UpdateProfileResponse:
      description: Update profile
      content:
        application/json:
          schema:
            type: object
            required:
              - me
            properties:
              me:
                $ref: '#/components/schemas/Me'
    UpdateProfilePhotoResponse:
      description: Update profile photo
      content:
        application/json:
          schema:
            type: object
            required:
              - me
            properties:
              me:
                $ref: '#/components/schemas/Me'
    RemoveProfilePhotoResponse:
      description: Remove profile photo
      content:
        application/json:
          schema:
            type: object
            required:
              - me
            properties:
              me:
                $ref: '#/components/schemas/Me'
    UpdateMeMemberProfileResponse:
      description: Update Me Member Profile
      content:
        application/json:
          schema:
            type: object
            required:
              - me
            properties:
              me:
                $ref: '#/components/schemas/Me'
    InvitationsAcceptResponse:
      description: Invitation accepted and user added to the workspace
      content:
        application/json:
          schema:
            type: object
            required:
              - me
            properties:
              me:
                $ref: '#/components/schemas/Me'
    CreateWorkspaceResponse:
      description: Workspace created
      content:
        application/json:
          schema:
            type: object
            required:
              - workspace
            properties:
              workspace:
                $ref: '#/components/schemas/Workspace'
    LoginResponse:
      description: Login response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Me'
    AuthVerifyOTPResponse:
      description: Successfully verified OTP. The user is now authenticated.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JwtToken'
    AuthByOAuthResponse:
      description: Auth by OAuth response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Me'
    InvitationProcessOAuthResponse:
      description: Invitation processed by OAuth
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Me'
    UpdateMemberRoleResponse:
      description: Update member role response
      content:
        application/json:
          schema:
            type: object
            required:
              - member
            properties:
              member:
                $ref: '#/components/schemas/Member'
    UpdateWorkspaceResponse:
      description: Workspace updated
      content:
        application/json:
          schema:
            type: object
            required:
              - workspace
            properties:
              workspace:
                $ref: '#/components/schemas/Workspace'
