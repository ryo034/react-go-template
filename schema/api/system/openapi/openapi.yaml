openapi: 3.0.2
info:
  title: System API
  description: System API
  version: 1.0.0
paths:
  /api/v1/ping:
    get:
      summary: Checks if the server is running
      tags:
        - Health
      responses:
        '200':
          description: Ping response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Ping response message
                    example: pong
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/auth/otp:
    post:
      summary: Send OTP
      tags:
        - OTP
      description: One Time Password (OTP) to user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
              required:
                - email
      responses:
        '200':
          description: OTP has been sent successfully.
          content:
            application/json:
              schema:
                type: object
                required:
                  - code
                properties:
                  code:
                    type: string
                    description: OTP 6 digit code
        '400':
          $ref: '#/components/responses/BadRequestError'
        '429':
          $ref: '#/components/responses/TooManyRequestsError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/auth/otp/verify:
    post:
      summary: Verify OTP
      tags:
        - OTP
      description: Verify OTP sent by user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                otp:
                  type: string
              required:
                - email
                - otp
      responses:
        '200':
          description: OTP has been verified successfully.
          content:
            application/json:
              schema:
                type: object
                required:
                  - token
                properties:
                  token:
                    type: string
                    description: JWT token
        '400':
          $ref: '#/components/responses/BadRequestError'
        '429':
          $ref: '#/components/responses/TooManyRequestsError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/auth/oauth:
    post:
      summary: Auth by OAuth
      tags:
        - OAuth
      description: Auth by OAuth.
      security:
        - bearer: []
      responses:
        '200':
          description: SignIn response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/me:
    get:
      summary: Get Admin User
      description: Returns the admin user
      tags:
        - Admin
      security:
        - bearer: []
      responses:
        '200':
          description: Admin User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Me'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/me/update-name:
    post:
      summary: Update Name
      description: Update Name
      operationId: updateName
      tags:
        - Admin
      security:
        - bearer: []
      requestBody:
        $ref: '#/components/requestBodies/UpdateName'
      responses:
        '200':
          description: Update Name response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Me'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/login:
    post:
      summary: Login
      description: Login
      operationId: login
      responses:
        '200':
          description: Login response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Me'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/workspaces:
    get:
      summary: Get Joined Workspaces
      description: Returns the workspaces the user is a member of
      tags:
        - Admin
      security:
        - bearer: []
      responses:
        '200':
          description: Joined Workspaces
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspaces'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Create Workspace
      description: Creates a new workspace
      tags:
        - Admin
      security:
        - bearer: []
      requestBody:
        $ref: '#/components/requestBodies/CreateWorkspace'
      responses:
        '201':
          description: Workspace created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  securitySchemes:
    bearer:
      type: http
      description: JWT Token Authentication
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      required:
        - userId
        - email
      properties:
        userId:
          type: string
          format: uuid
        email:
          type: string
          format: email
        name:
          type: string
        phoneNumber:
          type: string
    MultiFactor:
      type: object
      required:
        - factorId
        - phoneNumber
      properties:
        factorId:
          type: string
        phoneNumber:
          type: string
    Workspace:
      type: object
      required:
        - workspaceId
        - name
        - subdomain
      properties:
        workspaceId:
          type: string
          description: base32 encoded UUID
          example: 3VZ6ZJ2Z6VZ6ZJ2Z
        name:
          type: string
          description: workspace name
        subdomain:
          type: string
          description: workspace subdomain (e.x. example-test)
    Workspaces:
      type: array
      items:
        $ref: '#/components/schemas/Workspace'
    Member:
      type: object
      required:
        - user
        - profile
      properties:
        profile:
          $ref: '#/components/schemas/MemberProfile'
        user:
          $ref: '#/components/schemas/User'
    MemberProfile:
      type: object
      required:
        - id
        - displayName
      properties:
        id:
          type: string
          description: base32 encoded UUID
          example: 3VZ6ZJ2Z6VZ6ZJ2Z
        displayName:
          type: string
        idNumber:
          type: string
    MembershipPeriod:
      type: object
      required:
        - start
        - end
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
    Me:
      type: object
      required:
        - self
        - joinedWorkspaces
      properties:
        self:
          $ref: '#/components/schemas/User'
        member:
          $ref: '#/components/schemas/Member'
        currentWorkspace:
          $ref: '#/components/schemas/Workspace'
        joinedWorkspaces:
          type: array
          items:
            $ref: '#/components/schemas/Workspace'
  requestBodies:
    CreateWorkspace:
      description: Creates a new workspace
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - name
              - subdomain
            properties:
              name:
                type: string
                description: workspace name
              subdomain:
                type: string
                description: workspace subdomain (e.x. example-test)
    UpdateName:
      description: Update Name
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - name
            properties:
              name:
                type: string
                description: Name
                example: John Doe
  responses:
    GeneralError:
      description: General Error
      content:
        application/json:
          schema:
            type: object
            description: RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807
            properties:
              status:
                type: integer
                example: 400
                description: >-
                  The HTTP status code generated for this occurrence of the
                  problem.
              type:
                type: string
                example: invalid_item_id
                description: error type
              title:
                type: string
                description: A short, human-readable summary of the problem type
              detail:
                type: string
                description: >-
                  A human-readable explanation specific to this occurrence of
                  the problem.
              code:
                type: string
                example: invalid_item_id
                description: error code
    BadRequestError:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            description: RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807
            properties:
              status:
                type: integer
                example: 400
                description: >-
                  The HTTP status code generated for this occurrence of the
                  problem.
              type:
                type: string
                example: invalid_item_id
                description: error type
              title:
                type: string
                description: A short, human-readable summary of the problem type
              detail:
                type: string
                description: >-
                  A human-readable explanation specific to this occurrence of
                  the problem.
              code:
                type: string
                example: invalid_item_id
                description: error code
    NotFoundError:
      description: Entity not found.
      content:
        application/json:
          schema:
            type: object
            description: RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807
            properties:
              status:
                type: integer
                example: 400
                description: >-
                  The HTTP status code generated for this occurrence of the
                  problem.
              type:
                type: string
                example: invalid_item_id
                description: error type
              title:
                type: string
                description: A short, human-readable summary of the problem type
              detail:
                type: string
                description: >-
                  A human-readable explanation specific to this occurrence of
                  the problem.
              code:
                type: string
                example: invalid_item_id
                description: error code
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            description: RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807
            properties:
              status:
                type: integer
                example: 400
                description: >-
                  The HTTP status code generated for this occurrence of the
                  problem.
              type:
                type: string
                example: invalid_item_id
                description: error type
              title:
                type: string
                description: A short, human-readable summary of the problem type
              detail:
                type: string
                description: >-
                  A human-readable explanation specific to this occurrence of
                  the problem.
              code:
                type: string
                example: invalid_item_id
                description: error code
    ConflictError:
      description: Conflict
      content:
        application/json:
          schema:
            type: object
            description: RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807
            properties:
              status:
                type: integer
                example: 400
                description: >-
                  The HTTP status code generated for this occurrence of the
                  problem.
              type:
                type: string
                example: invalid_item_id
                description: error type
              title:
                type: string
                description: A short, human-readable summary of the problem type
              detail:
                type: string
                description: >-
                  A human-readable explanation specific to this occurrence of
                  the problem.
              code:
                type: string
                example: invalid_item_id
                description: error code
    TooManyRequestsError:
      description: Too many requests
      content:
        application/json:
          schema:
            type: object
            description: RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807
            properties:
              status:
                type: integer
                example: 400
                description: >-
                  The HTTP status code generated for this occurrence of the
                  problem.
              type:
                type: string
                example: invalid_item_id
                description: error type
              title:
                type: string
                description: A short, human-readable summary of the problem type
              detail:
                type: string
                description: >-
                  A human-readable explanation specific to this occurrence of
                  the problem.
              code:
                type: string
                example: invalid_item_id
                description: error code
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            description: RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807
            properties:
              status:
                type: integer
                example: 400
                description: >-
                  The HTTP status code generated for this occurrence of the
                  problem.
              type:
                type: string
                example: invalid_item_id
                description: error type
              title:
                type: string
                description: A short, human-readable summary of the problem type
              detail:
                type: string
                description: >-
                  A human-readable explanation specific to this occurrence of
                  the problem.
              code:
                type: string
                example: invalid_item_id
                description: error code
