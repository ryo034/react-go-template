openapi: 3.0.2
info:
  title: System API
  description: System API
  version: 1.0.0
paths:
  /api/v1/ping:
    get:
      summary: Checks if the server is running
      tags:
        - Health
      responses:
        '200':
          description: Ping response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Ping response message
                    example: pong
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/auth/otp:
    post:
      summary: Send OTP
      tags:
        - OTP
      description: One Time Password (OTP) to user.
      requestBody:
        $ref: '#/components/requestBodies/AuthByOtpPost'
      responses:
        '200':
          description: OTP has been sent successfully.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '429':
          $ref: '#/components/responses/TooManyRequestsError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/auth/otp/verify:
    post:
      summary: Verify OTP
      tags:
        - OTP
      description: Verify OTP sent by user.
      requestBody:
        $ref: '#/components/requestBodies/AuthVerifyPost'
      responses:
        '200':
          description: Successfully verified OTP. The user is now authenticated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JwtToken'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '429':
          $ref: '#/components/responses/TooManyRequestsError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/auth/invitations/process:
    post:
      summary: Process an invitation by verifying token and email
      operationId: processInvitation
      tags:
        - Invitations
      requestBody:
        $ref: '#/components/requestBodies/InvitationsProcess'
      responses:
        '200':
          description: OTP has been sent successfully.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/auth/oauth:
    post:
      summary: Auth by OAuth
      tags:
        - OAuth
      description: Auth by OAuth.
      security:
        - bearer: []
      responses:
        '200':
          description: SignIn response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/me:
    get:
      summary: Get Admin User
      description: Returns the admin user
      tags:
        - Admin
      security:
        - bearer: []
      responses:
        '200':
          description: Admin User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Me'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/me/profile:
    put:
      summary: Update Profile
      description: Updates the user profile
      tags:
        - Profile
      security:
        - bearer: []
      requestBody:
        $ref: '#/components/requestBodies/UpdateMeProfile'
      responses:
        '200':
          description: Profile updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Me'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/login:
    post:
      summary: Login
      description: Login
      operationId: login
      responses:
        '200':
          description: Login response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Me'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/workspaces:
    get:
      summary: Get Joined Workspaces
      description: Returns the workspaces the user is a member of
      tags:
        - Admin
      security:
        - bearer: []
      responses:
        '200':
          description: Joined Workspaces
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspaces'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Create Workspace
      description: Creates a new workspace
      tags:
        - Admin
      security:
        - bearer: []
      requestBody:
        $ref: '#/components/requestBodies/CreateWorkspace'
      responses:
        '201':
          description: Workspace created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/members:
    get:
      summary: Get Members
      description: Returns the members of the workspace
      tags:
        - Admin
      security:
        - bearer: []
      responses:
        '200':
          description: Members
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Members'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/members/invitations/bulk:
    post:
      summary: Invite multiple users to the workspace by email
      operationId: inviteMultipleUsersToWorkspace
      tags:
        - Members
      security:
        - bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invitedMembers:
                  $ref: '#/components/schemas/Invitations'
      responses:
        '200':
          description: Successfully sent invitations
          content:
            application/json:
              schema:
                $ref: '#/components/responses/BulkInvitedResult'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/members/invitations/verify:
    get:
      summary: Verify Invitation
      operationId: verifyInvitation
      tags:
        - Members
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
            format: uuid
          description: Invitation token
      responses:
        '200':
          description: Invitation verified
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InvitationInfo'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/members/invitations/{invitationId}/accept:
    post:
      summary: Accept an invitation to join a workspace
      operationId: acceptInvitation
      tags:
        - Members
      security:
        - bearer: []
      parameters:
        - name: invitationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Invitation token
      responses:
        '200':
          description: Invitation accepted and user added to the workspace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Me'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  securitySchemes:
    bearer:
      type: http
      description: JWT Token Authentication
      scheme: bearer
      bearerFormat: JWT
  schemas:
    JwtToken:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          description: JWT token
    User:
      type: object
      required:
        - userId
        - email
      properties:
        userId:
          type: string
          format: uuid
        email:
          type: string
          format: email
        name:
          type: string
        phoneNumber:
          type: string
    MultiFactor:
      type: object
      required:
        - factorId
        - phoneNumber
      properties:
        factorId:
          type: string
        phoneNumber:
          type: string
    Workspace:
      type: object
      required:
        - workspaceId
        - name
        - subdomain
      properties:
        workspaceId:
          type: string
          format: uuid
          description: workspace id in the format of UUID v7.
          example: 123e4567-e89b-12d3-a456-426614174000
        name:
          type: string
          description: workspace name
        subdomain:
          type: string
          description: workspace subdomain (e.x. example-test)
    Workspaces:
      type: array
      items:
        $ref: '#/components/schemas/Workspace'
    Inviter:
      type: object
      required:
        - member
        - workspace
      properties:
        member:
          $ref: '#/components/schemas/Member'
        workspace:
          $ref: '#/components/schemas/Workspace'
    Member:
      type: object
      required:
        - user
        - profile
      properties:
        profile:
          $ref: '#/components/schemas/MemberProfile'
        user:
          $ref: '#/components/schemas/User'
    MemberProfile:
      type: object
      required:
        - id
        - displayName
      properties:
        id:
          type: string
          description: base32 encoded UUID
          example: 3VZ6ZJ2Z6VZ6ZJ2Z
        displayName:
          type: string
        idNumber:
          type: string
    Members:
      type: array
      items:
        $ref: '#/components/schemas/Member'
    Invitation:
      type: object
      required:
        - id
        - verified
        - expiredAt
        - inviteeEmail
        - displayName
      properties:
        id:
          type: string
          format: uuid
          description: Invitation ID
        verified:
          type: boolean
        expiredAt:
          type: string
          format: date-time
        inviteeEmail:
          type: string
          format: email
          description: Email of the invitee
        displayName:
          type: string
          description: Display name of the invitee
    Invitations:
      type: array
      items:
        $ref: '#/components/schemas/Invitation'
    MembershipPeriod:
      type: object
      required:
        - start
        - end
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
    Me:
      type: object
      required:
        - self
        - joinedWorkspaces
      properties:
        self:
          $ref: '#/components/schemas/User'
        member:
          $ref: '#/components/schemas/Member'
        currentWorkspace:
          $ref: '#/components/schemas/Workspace'
        joinedWorkspaces:
          type: array
          items:
            $ref: '#/components/schemas/Workspace'
        receivedInvitations:
          type: array
          items:
            $ref: '#/components/schemas/ReceivedInvitation'
    ReceivedInvitation:
      type: object
      required:
        - invitation
        - inviter
      properties:
        invitation:
          $ref: '#/components/schemas/Invitation'
        inviter:
          $ref: '#/components/schemas/Inviter'
  requestBodies:
    AuthByOtpPost:
      description: Authenticate user by OTP.
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
            required:
              - email
    AuthVerifyPost:
      description: Verify OTP sent by user.
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
              otp:
                type: string
            required:
              - email
              - otp
    CreateWorkspace:
      description: Creates a new workspace
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - subdomain
            properties:
              subdomain:
                type: string
                description: workspace subdomain (e.x. example-test)
    UpdateMeProfile:
      description: Update Me Profile
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - user
            properties:
              user:
                $ref: '#/components/schemas/User'
    InvitationsProcess:
      description: >-
        Process an invitation by verifying token and email, and register or add
        user to workspace.
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              token:
                type: string
                format: uuid
                description: The invitation token.
              email:
                type: string
                format: email
                description: The user's email address.
            required:
              - token
              - email
  responses:
    GeneralError:
      description: General Error
      content:
        application/json:
          schema:
            type: object
            description: RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807
            properties:
              status:
                type: integer
                example: 400
                description: >-
                  The HTTP status code generated for this occurrence of the
                  problem.
              type:
                type: string
                example: invalid_item_id
                description: error type
              title:
                type: string
                description: A short, human-readable summary of the problem type
              detail:
                type: string
                description: >-
                  A human-readable explanation specific to this occurrence of
                  the problem.
              code:
                type: string
                example: 400-001
                description: A custom code identifying the specific error.
    BadRequestError:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            description: RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807
            properties:
              status:
                type: integer
                example: 400
                description: >-
                  The HTTP status code generated for this occurrence of the
                  problem.
              type:
                type: string
                example: invalid_item_id
                description: error type
              title:
                type: string
                description: A short, human-readable summary of the problem type
              detail:
                type: string
                description: >-
                  A human-readable explanation specific to this occurrence of
                  the problem.
              code:
                type: string
                example: 400-001
                description: A custom code identifying the specific error.
    NotFoundError:
      description: Entity not found.
      content:
        application/json:
          schema:
            type: object
            description: RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807
            properties:
              status:
                type: integer
                example: 400
                description: >-
                  The HTTP status code generated for this occurrence of the
                  problem.
              type:
                type: string
                example: invalid_item_id
                description: error type
              title:
                type: string
                description: A short, human-readable summary of the problem type
              detail:
                type: string
                description: >-
                  A human-readable explanation specific to this occurrence of
                  the problem.
              code:
                type: string
                example: 400-001
                description: A custom code identifying the specific error.
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            description: RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807
            properties:
              status:
                type: integer
                example: 400
                description: >-
                  The HTTP status code generated for this occurrence of the
                  problem.
              type:
                type: string
                example: invalid_item_id
                description: error type
              title:
                type: string
                description: A short, human-readable summary of the problem type
              detail:
                type: string
                description: >-
                  A human-readable explanation specific to this occurrence of
                  the problem.
              code:
                type: string
                example: 400-001
                description: A custom code identifying the specific error.
    ConflictError:
      description: Conflict
      content:
        application/json:
          schema:
            type: object
            description: RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807
            properties:
              status:
                type: integer
                example: 400
                description: >-
                  The HTTP status code generated for this occurrence of the
                  problem.
              type:
                type: string
                example: invalid_item_id
                description: error type
              title:
                type: string
                description: A short, human-readable summary of the problem type
              detail:
                type: string
                description: >-
                  A human-readable explanation specific to this occurrence of
                  the problem.
              code:
                type: string
                example: 400-001
                description: A custom code identifying the specific error.
    TooManyRequestsError:
      description: Too many requests
      content:
        application/json:
          schema:
            type: object
            description: RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807
            properties:
              status:
                type: integer
                example: 400
                description: >-
                  The HTTP status code generated for this occurrence of the
                  problem.
              type:
                type: string
                example: invalid_item_id
                description: error type
              title:
                type: string
                description: A short, human-readable summary of the problem type
              detail:
                type: string
                description: >-
                  A human-readable explanation specific to this occurrence of
                  the problem.
              code:
                type: string
                example: 400-001
                description: A custom code identifying the specific error.
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            description: RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807
            properties:
              status:
                type: integer
                example: 400
                description: >-
                  The HTTP status code generated for this occurrence of the
                  problem.
              type:
                type: string
                example: invalid_item_id
                description: error type
              title:
                type: string
                description: A short, human-readable summary of the problem type
              detail:
                type: string
                description: >-
                  A human-readable explanation specific to this occurrence of
                  the problem.
              code:
                type: string
                example: 400-001
                description: A custom code identifying the specific error.
    InvitationInfo:
      type: object
      required:
        - workspaceName
        - verified
      properties:
        workspaceName:
          type: string
        verified:
          type: boolean
    BulkInvitedResult:
      type: object
      required:
        - invitedCount
        - failedInvitations
        - registeredInvitations
      properties:
        invitedCount:
          type: integer
        failedInvitations:
          $ref: '#/components/schemas/Invitations'
        registeredInvitations:
          $ref: '#/components/schemas/Invitations'
