// Code generated by ogen, DO NOT EDIT.

package openapi

import (
	"net/url"
	"time"

	"github.com/go-faster/errors"
	"github.com/google/uuid"

	ht "github.com/ogen-go/ogen/http"
)

// APIV1AuthOtpPostOK is response for APIV1AuthOtpPost operation.
type APIV1AuthOtpPostOK struct{}

func (*APIV1AuthOtpPostOK) aPIV1AuthOtpPostRes() {}

type APIV1AuthOtpPostReq struct {
	Email string `json:"email"`
}

// GetEmail returns the value of Email.
func (s *APIV1AuthOtpPostReq) GetEmail() string {
	return s.Email
}

// SetEmail sets the value of Email.
func (s *APIV1AuthOtpPostReq) SetEmail(val string) {
	s.Email = val
}

type APIV1AuthOtpVerifyPostReq struct {
	Email string `json:"email"`
	Otp   string `json:"otp"`
}

// GetEmail returns the value of Email.
func (s *APIV1AuthOtpVerifyPostReq) GetEmail() string {
	return s.Email
}

// GetOtp returns the value of Otp.
func (s *APIV1AuthOtpVerifyPostReq) GetOtp() string {
	return s.Otp
}

// SetEmail sets the value of Email.
func (s *APIV1AuthOtpVerifyPostReq) SetEmail(val string) {
	s.Email = val
}

// SetOtp sets the value of Otp.
func (s *APIV1AuthOtpVerifyPostReq) SetOtp(val string) {
	s.Otp = val
}

type APIV1InvitationsGetStatus string

const (
	APIV1InvitationsGetStatusAccepted APIV1InvitationsGetStatus = "accepted"
)

// AllValues returns all APIV1InvitationsGetStatus values.
func (APIV1InvitationsGetStatus) AllValues() []APIV1InvitationsGetStatus {
	return []APIV1InvitationsGetStatus{
		APIV1InvitationsGetStatusAccepted,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s APIV1InvitationsGetStatus) MarshalText() ([]byte, error) {
	switch s {
	case APIV1InvitationsGetStatusAccepted:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *APIV1InvitationsGetStatus) UnmarshalText(data []byte) error {
	switch APIV1InvitationsGetStatus(data) {
	case APIV1InvitationsGetStatusAccepted:
		*s = APIV1InvitationsGetStatusAccepted
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type APIV1MeMemberProfilePutReq struct {
	MemberProfile MemberProfile `json:"memberProfile"`
}

// GetMemberProfile returns the value of MemberProfile.
func (s *APIV1MeMemberProfilePutReq) GetMemberProfile() MemberProfile {
	return s.MemberProfile
}

// SetMemberProfile sets the value of MemberProfile.
func (s *APIV1MeMemberProfilePutReq) SetMemberProfile(val MemberProfile) {
	s.MemberProfile = val
}

type APIV1MeProfilePhotoPutReq struct {
	Photo ht.MultipartFile `json:"photo"`
}

// GetPhoto returns the value of Photo.
func (s *APIV1MeProfilePhotoPutReq) GetPhoto() ht.MultipartFile {
	return s.Photo
}

// SetPhoto sets the value of Photo.
func (s *APIV1MeProfilePhotoPutReq) SetPhoto(val ht.MultipartFile) {
	s.Photo = val
}

type APIV1MeProfilePutReq struct {
	Profile APIV1MeProfilePutReqProfile `json:"profile"`
}

// GetProfile returns the value of Profile.
func (s *APIV1MeProfilePutReq) GetProfile() APIV1MeProfilePutReqProfile {
	return s.Profile
}

// SetProfile sets the value of Profile.
func (s *APIV1MeProfilePutReq) SetProfile(val APIV1MeProfilePutReqProfile) {
	s.Profile = val
}

type APIV1MeProfilePutReqProfile struct {
	Name OptString `json:"name"`
}

// GetName returns the value of Name.
func (s *APIV1MeProfilePutReqProfile) GetName() OptString {
	return s.Name
}

// SetName sets the value of Name.
func (s *APIV1MeProfilePutReqProfile) SetName(val OptString) {
	s.Name = val
}

// APIV1MeWorkspaceLeavePostNoContent is response for APIV1MeWorkspaceLeavePost operation.
type APIV1MeWorkspaceLeavePostNoContent struct{}

func (*APIV1MeWorkspaceLeavePostNoContent) aPIV1MeWorkspaceLeavePostRes() {}

// APIV1MembersMemberIdDeleteNoContent is response for APIV1MembersMemberIdDelete operation.
type APIV1MembersMemberIdDeleteNoContent struct{}

func (*APIV1MembersMemberIdDeleteNoContent) aPIV1MembersMemberIdDeleteRes() {}

type APIV1MembersMemberIdRolePutReq struct {
	Role APIV1MembersMemberIdRolePutReqRole `json:"role"`
}

// GetRole returns the value of Role.
func (s *APIV1MembersMemberIdRolePutReq) GetRole() APIV1MembersMemberIdRolePutReqRole {
	return s.Role
}

// SetRole sets the value of Role.
func (s *APIV1MembersMemberIdRolePutReq) SetRole(val APIV1MembersMemberIdRolePutReqRole) {
	s.Role = val
}

type APIV1MembersMemberIdRolePutReqRole string

const (
	APIV1MembersMemberIdRolePutReqRoleAdmin  APIV1MembersMemberIdRolePutReqRole = "admin"
	APIV1MembersMemberIdRolePutReqRoleMember APIV1MembersMemberIdRolePutReqRole = "member"
	APIV1MembersMemberIdRolePutReqRoleGuest  APIV1MembersMemberIdRolePutReqRole = "guest"
)

// AllValues returns all APIV1MembersMemberIdRolePutReqRole values.
func (APIV1MembersMemberIdRolePutReqRole) AllValues() []APIV1MembersMemberIdRolePutReqRole {
	return []APIV1MembersMemberIdRolePutReqRole{
		APIV1MembersMemberIdRolePutReqRoleAdmin,
		APIV1MembersMemberIdRolePutReqRoleMember,
		APIV1MembersMemberIdRolePutReqRoleGuest,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s APIV1MembersMemberIdRolePutReqRole) MarshalText() ([]byte, error) {
	switch s {
	case APIV1MembersMemberIdRolePutReqRoleAdmin:
		return []byte(s), nil
	case APIV1MembersMemberIdRolePutReqRoleMember:
		return []byte(s), nil
	case APIV1MembersMemberIdRolePutReqRoleGuest:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *APIV1MembersMemberIdRolePutReqRole) UnmarshalText(data []byte) error {
	switch APIV1MembersMemberIdRolePutReqRole(data) {
	case APIV1MembersMemberIdRolePutReqRoleAdmin:
		*s = APIV1MembersMemberIdRolePutReqRoleAdmin
		return nil
	case APIV1MembersMemberIdRolePutReqRoleMember:
		*s = APIV1MembersMemberIdRolePutReqRoleMember
		return nil
	case APIV1MembersMemberIdRolePutReqRoleGuest:
		*s = APIV1MembersMemberIdRolePutReqRoleGuest
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type APIV1PingGetOK struct {
	// Ping response message.
	Message OptString `json:"message"`
}

// GetMessage returns the value of Message.
func (s *APIV1PingGetOK) GetMessage() OptString {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *APIV1PingGetOK) SetMessage(val OptString) {
	s.Message = val
}

func (*APIV1PingGetOK) aPIV1PingGetRes() {}

type APIV1WorkspacesPostReq struct {
	// Workspace subdomain (e.x. example-test).
	Subdomain string `json:"subdomain"`
}

// GetSubdomain returns the value of Subdomain.
func (s *APIV1WorkspacesPostReq) GetSubdomain() string {
	return s.Subdomain
}

// SetSubdomain sets the value of Subdomain.
func (s *APIV1WorkspacesPostReq) SetSubdomain(val string) {
	s.Subdomain = val
}

type APIV1WorkspacesWorkspaceIdPutReq struct {
	// Workspace name.
	Name OptString `json:"name"`
	// Workspace subdomain.
	Subdomain OptString `json:"subdomain"`
}

// GetName returns the value of Name.
func (s *APIV1WorkspacesWorkspaceIdPutReq) GetName() OptString {
	return s.Name
}

// GetSubdomain returns the value of Subdomain.
func (s *APIV1WorkspacesWorkspaceIdPutReq) GetSubdomain() OptString {
	return s.Subdomain
}

// SetName sets the value of Name.
func (s *APIV1WorkspacesWorkspaceIdPutReq) SetName(val OptString) {
	s.Name = val
}

// SetSubdomain sets the value of Subdomain.
func (s *APIV1WorkspacesWorkspaceIdPutReq) SetSubdomain(val OptString) {
	s.Subdomain = val
}

// Authentication provider.
// Ref: #/components/schemas/AuthProvider
type AuthProvider string

const (
	AuthProviderEmail  AuthProvider = "email"
	AuthProviderGoogle AuthProvider = "google"
)

// AllValues returns all AuthProvider values.
func (AuthProvider) AllValues() []AuthProvider {
	return []AuthProvider{
		AuthProviderEmail,
		AuthProviderGoogle,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s AuthProvider) MarshalText() ([]byte, error) {
	switch s {
	case AuthProviderEmail:
		return []byte(s), nil
	case AuthProviderGoogle:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *AuthProvider) UnmarshalText(data []byte) error {
	switch AuthProvider(data) {
	case AuthProviderEmail:
		*s = AuthProviderEmail
		return nil
	case AuthProviderGoogle:
		*s = AuthProviderGoogle
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807.
type BadRequestError struct {
	// The HTTP status code generated for this occurrence of the problem.
	Status OptInt `json:"status"`
	// A short, human-readable summary of the problem type.
	Title OptString `json:"title"`
	// A human-readable explanation specific to this occurrence of the problem.
	Detail OptString `json:"detail"`
	// A custom code identifying the specific error.
	Code OptString `json:"code"`
}

// GetStatus returns the value of Status.
func (s *BadRequestError) GetStatus() OptInt {
	return s.Status
}

// GetTitle returns the value of Title.
func (s *BadRequestError) GetTitle() OptString {
	return s.Title
}

// GetDetail returns the value of Detail.
func (s *BadRequestError) GetDetail() OptString {
	return s.Detail
}

// GetCode returns the value of Code.
func (s *BadRequestError) GetCode() OptString {
	return s.Code
}

// SetStatus sets the value of Status.
func (s *BadRequestError) SetStatus(val OptInt) {
	s.Status = val
}

// SetTitle sets the value of Title.
func (s *BadRequestError) SetTitle(val OptString) {
	s.Title = val
}

// SetDetail sets the value of Detail.
func (s *BadRequestError) SetDetail(val OptString) {
	s.Detail = val
}

// SetCode sets the value of Code.
func (s *BadRequestError) SetCode(val OptString) {
	s.Code = val
}

func (*BadRequestError) aPIV1AuthOtpPostRes()               {}
func (*BadRequestError) aPIV1AuthOtpVerifyPostRes()         {}
func (*BadRequestError) aPIV1MeMemberProfilePutRes()        {}
func (*BadRequestError) aPIV1MeProfilePhotoPutRes()         {}
func (*BadRequestError) aPIV1MeProfilePutRes()              {}
func (*BadRequestError) aPIV1MeWorkspaceLeavePostRes()      {}
func (*BadRequestError) aPIV1MembersMemberIdDeleteRes()     {}
func (*BadRequestError) aPIV1MembersMemberIdRolePutRes()    {}
func (*BadRequestError) aPIV1WorkspacesPostRes()            {}
func (*BadRequestError) aPIV1WorkspacesWorkspaceIdPutRes()  {}
func (*BadRequestError) getInvitationByTokenRes()           {}
func (*BadRequestError) inviteMultipleUsersToWorkspaceRes() {}
func (*BadRequestError) processInvitationEmailRes()         {}
func (*BadRequestError) processInvitationOAuthRes()         {}
func (*BadRequestError) resendInvitationRes()               {}
func (*BadRequestError) revokeInvitationRes()               {}

type Bearer struct {
	Token string
}

// GetToken returns the value of Token.
func (s *Bearer) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *Bearer) SetToken(val string) {
	s.Token = val
}

// RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807.
type ConflictError struct {
	// The HTTP status code generated for this occurrence of the problem.
	Status OptInt `json:"status"`
	// A short, human-readable summary of the problem type.
	Title OptString `json:"title"`
	// A human-readable explanation specific to this occurrence of the problem.
	Detail OptString `json:"detail"`
	// A custom code identifying the specific error.
	Code OptString `json:"code"`
}

// GetStatus returns the value of Status.
func (s *ConflictError) GetStatus() OptInt {
	return s.Status
}

// GetTitle returns the value of Title.
func (s *ConflictError) GetTitle() OptString {
	return s.Title
}

// GetDetail returns the value of Detail.
func (s *ConflictError) GetDetail() OptString {
	return s.Detail
}

// GetCode returns the value of Code.
func (s *ConflictError) GetCode() OptString {
	return s.Code
}

// SetStatus sets the value of Status.
func (s *ConflictError) SetStatus(val OptInt) {
	s.Status = val
}

// SetTitle sets the value of Title.
func (s *ConflictError) SetTitle(val OptString) {
	s.Title = val
}

// SetDetail sets the value of Detail.
func (s *ConflictError) SetDetail(val OptString) {
	s.Detail = val
}

// SetCode sets the value of Code.
func (s *ConflictError) SetCode(val OptString) {
	s.Code = val
}

func (*ConflictError) aPIV1MembersMemberIdDeleteRes()    {}
func (*ConflictError) aPIV1WorkspacesPostRes()           {}
func (*ConflictError) aPIV1WorkspacesWorkspaceIdPutRes() {}
func (*ConflictError) acceptInvitationRes()              {}
func (*ConflictError) getInvitationByTokenRes()          {}

type CreateWorkspaceResponse struct {
	Workspace Workspace `json:"workspace"`
}

// GetWorkspace returns the value of Workspace.
func (s *CreateWorkspaceResponse) GetWorkspace() Workspace {
	return s.Workspace
}

// SetWorkspace sets the value of Workspace.
func (s *CreateWorkspaceResponse) SetWorkspace(val Workspace) {
	s.Workspace = val
}

func (*CreateWorkspaceResponse) aPIV1WorkspacesPostRes() {}

// RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807.
type ForbiddenError struct {
	// The HTTP status code generated for this occurrence of the problem.
	Status OptInt `json:"status"`
	// A short, human-readable summary of the problem type.
	Title OptString `json:"title"`
	// A human-readable explanation specific to this occurrence of the problem.
	Detail OptString `json:"detail"`
	// A custom code identifying the specific error.
	Code OptString `json:"code"`
}

// GetStatus returns the value of Status.
func (s *ForbiddenError) GetStatus() OptInt {
	return s.Status
}

// GetTitle returns the value of Title.
func (s *ForbiddenError) GetTitle() OptString {
	return s.Title
}

// GetDetail returns the value of Detail.
func (s *ForbiddenError) GetDetail() OptString {
	return s.Detail
}

// GetCode returns the value of Code.
func (s *ForbiddenError) GetCode() OptString {
	return s.Code
}

// SetStatus sets the value of Status.
func (s *ForbiddenError) SetStatus(val OptInt) {
	s.Status = val
}

// SetTitle sets the value of Title.
func (s *ForbiddenError) SetTitle(val OptString) {
	s.Title = val
}

// SetDetail sets the value of Detail.
func (s *ForbiddenError) SetDetail(val OptString) {
	s.Detail = val
}

// SetCode sets the value of Code.
func (s *ForbiddenError) SetCode(val OptString) {
	s.Code = val
}

func (*ForbiddenError) aPIV1MeProfilePutRes()             {}
func (*ForbiddenError) aPIV1MeWorkspaceLeavePostRes()     {}
func (*ForbiddenError) aPIV1MembersMemberIdDeleteRes()    {}
func (*ForbiddenError) aPIV1MembersMemberIdRolePutRes()   {}
func (*ForbiddenError) aPIV1WorkspacesWorkspaceIdPutRes() {}
func (*ForbiddenError) resendInvitationRes()              {}
func (*ForbiddenError) revokeInvitationRes()              {}

type GetInvitationByTokenResponse struct {
	ReceivedInvitation ReceivedInvitation `json:"receivedInvitation"`
}

// GetReceivedInvitation returns the value of ReceivedInvitation.
func (s *GetInvitationByTokenResponse) GetReceivedInvitation() ReceivedInvitation {
	return s.ReceivedInvitation
}

// SetReceivedInvitation sets the value of ReceivedInvitation.
func (s *GetInvitationByTokenResponse) SetReceivedInvitation(val ReceivedInvitation) {
	s.ReceivedInvitation = val
}

func (*GetInvitationByTokenResponse) getInvitationByTokenRes() {}

// RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807.
type GoneError struct {
	// The HTTP status code generated for this occurrence of the problem.
	Status OptInt `json:"status"`
	// A short, human-readable summary of the problem type.
	Title OptString `json:"title"`
	// A human-readable explanation specific to this occurrence of the problem.
	Detail OptString `json:"detail"`
	// A custom code identifying the specific error.
	Code OptString `json:"code"`
}

// GetStatus returns the value of Status.
func (s *GoneError) GetStatus() OptInt {
	return s.Status
}

// GetTitle returns the value of Title.
func (s *GoneError) GetTitle() OptString {
	return s.Title
}

// GetDetail returns the value of Detail.
func (s *GoneError) GetDetail() OptString {
	return s.Detail
}

// GetCode returns the value of Code.
func (s *GoneError) GetCode() OptString {
	return s.Code
}

// SetStatus sets the value of Status.
func (s *GoneError) SetStatus(val OptInt) {
	s.Status = val
}

// SetTitle sets the value of Title.
func (s *GoneError) SetTitle(val OptString) {
	s.Title = val
}

// SetDetail sets the value of Detail.
func (s *GoneError) SetDetail(val OptString) {
	s.Detail = val
}

// SetCode sets the value of Code.
func (s *GoneError) SetCode(val OptString) {
	s.Code = val
}

func (*GoneError) acceptInvitationRes()     {}
func (*GoneError) getInvitationByTokenRes() {}

// RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807.
type InternalServerError struct {
	// The HTTP status code generated for this occurrence of the problem.
	Status OptInt `json:"status"`
	// A short, human-readable summary of the problem type.
	Title OptString `json:"title"`
	// A human-readable explanation specific to this occurrence of the problem.
	Detail OptString `json:"detail"`
	// A custom code identifying the specific error.
	Code OptString `json:"code"`
}

// GetStatus returns the value of Status.
func (s *InternalServerError) GetStatus() OptInt {
	return s.Status
}

// GetTitle returns the value of Title.
func (s *InternalServerError) GetTitle() OptString {
	return s.Title
}

// GetDetail returns the value of Detail.
func (s *InternalServerError) GetDetail() OptString {
	return s.Detail
}

// GetCode returns the value of Code.
func (s *InternalServerError) GetCode() OptString {
	return s.Code
}

// SetStatus sets the value of Status.
func (s *InternalServerError) SetStatus(val OptInt) {
	s.Status = val
}

// SetTitle sets the value of Title.
func (s *InternalServerError) SetTitle(val OptString) {
	s.Title = val
}

// SetDetail sets the value of Detail.
func (s *InternalServerError) SetDetail(val OptString) {
	s.Detail = val
}

// SetCode sets the value of Code.
func (s *InternalServerError) SetCode(val OptString) {
	s.Code = val
}

func (*InternalServerError) aPIV1AuthOAuthPostRes()             {}
func (*InternalServerError) aPIV1AuthOtpPostRes()               {}
func (*InternalServerError) aPIV1AuthOtpVerifyPostRes()         {}
func (*InternalServerError) aPIV1InvitationsGetRes()            {}
func (*InternalServerError) aPIV1MeGetRes()                     {}
func (*InternalServerError) aPIV1MeMemberProfilePutRes()        {}
func (*InternalServerError) aPIV1MeProfilePhotoDeleteRes()      {}
func (*InternalServerError) aPIV1MeProfilePhotoPutRes()         {}
func (*InternalServerError) aPIV1MeProfilePutRes()              {}
func (*InternalServerError) aPIV1MeWorkspaceLeavePostRes()      {}
func (*InternalServerError) aPIV1MembersGetRes()                {}
func (*InternalServerError) aPIV1MembersMemberIdDeleteRes()     {}
func (*InternalServerError) aPIV1MembersMemberIdRolePutRes()    {}
func (*InternalServerError) aPIV1PingGetRes()                   {}
func (*InternalServerError) aPIV1WorkspacesGetRes()             {}
func (*InternalServerError) aPIV1WorkspacesPostRes()            {}
func (*InternalServerError) aPIV1WorkspacesWorkspaceIdPutRes()  {}
func (*InternalServerError) acceptInvitationRes()               {}
func (*InternalServerError) getInvitationByTokenRes()           {}
func (*InternalServerError) inviteMultipleUsersToWorkspaceRes() {}
func (*InternalServerError) processInvitationEmailRes()         {}
func (*InternalServerError) processInvitationOAuthRes()         {}
func (*InternalServerError) resendInvitationRes()               {}
func (*InternalServerError) revokeInvitationRes()               {}

// Ref: #/components/schemas/Invitation
type Invitation struct {
	// Invitation ID.
	ID        uuid.UUID `json:"id"`
	Accepted  bool      `json:"accepted"`
	ExpiredAt time.Time `json:"expiredAt"`
	// Email of the invitee.
	InviteeEmail string `json:"inviteeEmail"`
	// Display name of the invitee.
	DisplayName string `json:"displayName"`
	Inviter     Member `json:"inviter"`
}

// GetID returns the value of ID.
func (s *Invitation) GetID() uuid.UUID {
	return s.ID
}

// GetAccepted returns the value of Accepted.
func (s *Invitation) GetAccepted() bool {
	return s.Accepted
}

// GetExpiredAt returns the value of ExpiredAt.
func (s *Invitation) GetExpiredAt() time.Time {
	return s.ExpiredAt
}

// GetInviteeEmail returns the value of InviteeEmail.
func (s *Invitation) GetInviteeEmail() string {
	return s.InviteeEmail
}

// GetDisplayName returns the value of DisplayName.
func (s *Invitation) GetDisplayName() string {
	return s.DisplayName
}

// GetInviter returns the value of Inviter.
func (s *Invitation) GetInviter() Member {
	return s.Inviter
}

// SetID sets the value of ID.
func (s *Invitation) SetID(val uuid.UUID) {
	s.ID = val
}

// SetAccepted sets the value of Accepted.
func (s *Invitation) SetAccepted(val bool) {
	s.Accepted = val
}

// SetExpiredAt sets the value of ExpiredAt.
func (s *Invitation) SetExpiredAt(val time.Time) {
	s.ExpiredAt = val
}

// SetInviteeEmail sets the value of InviteeEmail.
func (s *Invitation) SetInviteeEmail(val string) {
	s.InviteeEmail = val
}

// SetDisplayName sets the value of DisplayName.
func (s *Invitation) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetInviter sets the value of Inviter.
func (s *Invitation) SetInviter(val Member) {
	s.Inviter = val
}

func (*Invitation) resendInvitationRes() {}

type Invitations []Invitation

func (*Invitations) revokeInvitationRes() {}

type InvitationsAcceptResponse struct {
	Me Me `json:"me"`
}

// GetMe returns the value of Me.
func (s *InvitationsAcceptResponse) GetMe() Me {
	return s.Me
}

// SetMe sets the value of Me.
func (s *InvitationsAcceptResponse) SetMe(val Me) {
	s.Me = val
}

func (*InvitationsAcceptResponse) acceptInvitationRes() {}

type InvitationsBulkResponse struct {
	// Total number of invitations.
	Total                 int         `json:"total"`
	SuccessfulInvitations Invitations `json:"successfulInvitations"`
	FailedInvitations     Invitations `json:"failedInvitations"`
	RegisteredInvitations Invitations `json:"registeredInvitations"`
}

// GetTotal returns the value of Total.
func (s *InvitationsBulkResponse) GetTotal() int {
	return s.Total
}

// GetSuccessfulInvitations returns the value of SuccessfulInvitations.
func (s *InvitationsBulkResponse) GetSuccessfulInvitations() Invitations {
	return s.SuccessfulInvitations
}

// GetFailedInvitations returns the value of FailedInvitations.
func (s *InvitationsBulkResponse) GetFailedInvitations() Invitations {
	return s.FailedInvitations
}

// GetRegisteredInvitations returns the value of RegisteredInvitations.
func (s *InvitationsBulkResponse) GetRegisteredInvitations() Invitations {
	return s.RegisteredInvitations
}

// SetTotal sets the value of Total.
func (s *InvitationsBulkResponse) SetTotal(val int) {
	s.Total = val
}

// SetSuccessfulInvitations sets the value of SuccessfulInvitations.
func (s *InvitationsBulkResponse) SetSuccessfulInvitations(val Invitations) {
	s.SuccessfulInvitations = val
}

// SetFailedInvitations sets the value of FailedInvitations.
func (s *InvitationsBulkResponse) SetFailedInvitations(val Invitations) {
	s.FailedInvitations = val
}

// SetRegisteredInvitations sets the value of RegisteredInvitations.
func (s *InvitationsBulkResponse) SetRegisteredInvitations(val Invitations) {
	s.RegisteredInvitations = val
}

func (*InvitationsBulkResponse) inviteMultipleUsersToWorkspaceRes() {}

type InvitationsResponse struct {
	Invitations []Invitation `json:"invitations"`
}

// GetInvitations returns the value of Invitations.
func (s *InvitationsResponse) GetInvitations() []Invitation {
	return s.Invitations
}

// SetInvitations sets the value of Invitations.
func (s *InvitationsResponse) SetInvitations(val []Invitation) {
	s.Invitations = val
}

func (*InvitationsResponse) aPIV1InvitationsGetRes() {}

type InviteMultipleUsersToWorkspaceReq struct {
	Invitees []Invitee `json:"invitees"`
}

// GetInvitees returns the value of Invitees.
func (s *InviteMultipleUsersToWorkspaceReq) GetInvitees() []Invitee {
	return s.Invitees
}

// SetInvitees sets the value of Invitees.
func (s *InviteMultipleUsersToWorkspaceReq) SetInvitees(val []Invitee) {
	s.Invitees = val
}

// Ref: #/components/schemas/Invitee
type Invitee struct {
	// Display name of the invitee.
	Name string `json:"name"`
	// Email of the invitee.
	Email string `json:"email"`
}

// GetName returns the value of Name.
func (s *Invitee) GetName() string {
	return s.Name
}

// GetEmail returns the value of Email.
func (s *Invitee) GetEmail() string {
	return s.Email
}

// SetName sets the value of Name.
func (s *Invitee) SetName(val string) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *Invitee) SetEmail(val string) {
	s.Email = val
}

// Ref: #/components/schemas/Inviter
type Inviter struct {
	Member    Member    `json:"member"`
	Workspace Workspace `json:"workspace"`
}

// GetMember returns the value of Member.
func (s *Inviter) GetMember() Member {
	return s.Member
}

// GetWorkspace returns the value of Workspace.
func (s *Inviter) GetWorkspace() Workspace {
	return s.Workspace
}

// SetMember sets the value of Member.
func (s *Inviter) SetMember(val Member) {
	s.Member = val
}

// SetWorkspace sets the value of Workspace.
func (s *Inviter) SetWorkspace(val Workspace) {
	s.Workspace = val
}

// Ref: #/components/schemas/JwtToken
type JwtToken struct {
	// JWT token.
	Token string `json:"token"`
}

// GetToken returns the value of Token.
func (s *JwtToken) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *JwtToken) SetToken(val string) {
	s.Token = val
}

func (*JwtToken) aPIV1AuthOtpVerifyPostRes() {}

// Ref: #/components/schemas/Me
type Me struct {
	Self                User                 `json:"self"`
	Member              OptMember            `json:"member"`
	CurrentWorkspace    OptWorkspace         `json:"currentWorkspace"`
	JoinedWorkspaces    []Workspace          `json:"joinedWorkspaces"`
	ReceivedInvitations []ReceivedInvitation `json:"receivedInvitations"`
	Providers           []AuthProvider       `json:"providers"`
}

// GetSelf returns the value of Self.
func (s *Me) GetSelf() User {
	return s.Self
}

// GetMember returns the value of Member.
func (s *Me) GetMember() OptMember {
	return s.Member
}

// GetCurrentWorkspace returns the value of CurrentWorkspace.
func (s *Me) GetCurrentWorkspace() OptWorkspace {
	return s.CurrentWorkspace
}

// GetJoinedWorkspaces returns the value of JoinedWorkspaces.
func (s *Me) GetJoinedWorkspaces() []Workspace {
	return s.JoinedWorkspaces
}

// GetReceivedInvitations returns the value of ReceivedInvitations.
func (s *Me) GetReceivedInvitations() []ReceivedInvitation {
	return s.ReceivedInvitations
}

// GetProviders returns the value of Providers.
func (s *Me) GetProviders() []AuthProvider {
	return s.Providers
}

// SetSelf sets the value of Self.
func (s *Me) SetSelf(val User) {
	s.Self = val
}

// SetMember sets the value of Member.
func (s *Me) SetMember(val OptMember) {
	s.Member = val
}

// SetCurrentWorkspace sets the value of CurrentWorkspace.
func (s *Me) SetCurrentWorkspace(val OptWorkspace) {
	s.CurrentWorkspace = val
}

// SetJoinedWorkspaces sets the value of JoinedWorkspaces.
func (s *Me) SetJoinedWorkspaces(val []Workspace) {
	s.JoinedWorkspaces = val
}

// SetReceivedInvitations sets the value of ReceivedInvitations.
func (s *Me) SetReceivedInvitations(val []ReceivedInvitation) {
	s.ReceivedInvitations = val
}

// SetProviders sets the value of Providers.
func (s *Me) SetProviders(val []AuthProvider) {
	s.Providers = val
}

func (*Me) aPIV1AuthOAuthPostRes()     {}
func (*Me) processInvitationOAuthRes() {}

type MeResponse struct {
	Me Me `json:"me"`
}

// GetMe returns the value of Me.
func (s *MeResponse) GetMe() Me {
	return s.Me
}

// SetMe sets the value of Me.
func (s *MeResponse) SetMe(val Me) {
	s.Me = val
}

func (*MeResponse) aPIV1MeGetRes() {}

// Ref: #/components/schemas/Member
type Member struct {
	ID               uuid.UUID              `json:"id"`
	Profile          MemberProfile          `json:"profile"`
	User             User                   `json:"user"`
	Role             MemberRole             `json:"role"`
	MembershipStatus MemberMembershipStatus `json:"membershipStatus"`
}

// GetID returns the value of ID.
func (s *Member) GetID() uuid.UUID {
	return s.ID
}

// GetProfile returns the value of Profile.
func (s *Member) GetProfile() MemberProfile {
	return s.Profile
}

// GetUser returns the value of User.
func (s *Member) GetUser() User {
	return s.User
}

// GetRole returns the value of Role.
func (s *Member) GetRole() MemberRole {
	return s.Role
}

// GetMembershipStatus returns the value of MembershipStatus.
func (s *Member) GetMembershipStatus() MemberMembershipStatus {
	return s.MembershipStatus
}

// SetID sets the value of ID.
func (s *Member) SetID(val uuid.UUID) {
	s.ID = val
}

// SetProfile sets the value of Profile.
func (s *Member) SetProfile(val MemberProfile) {
	s.Profile = val
}

// SetUser sets the value of User.
func (s *Member) SetUser(val User) {
	s.User = val
}

// SetRole sets the value of Role.
func (s *Member) SetRole(val MemberRole) {
	s.Role = val
}

// SetMembershipStatus sets the value of MembershipStatus.
func (s *Member) SetMembershipStatus(val MemberMembershipStatus) {
	s.MembershipStatus = val
}

type MemberMembershipStatus string

const (
	MemberMembershipStatusACTIVE MemberMembershipStatus = "ACTIVE"
	MemberMembershipStatusLEFT   MemberMembershipStatus = "LEFT"
)

// AllValues returns all MemberMembershipStatus values.
func (MemberMembershipStatus) AllValues() []MemberMembershipStatus {
	return []MemberMembershipStatus{
		MemberMembershipStatusACTIVE,
		MemberMembershipStatusLEFT,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s MemberMembershipStatus) MarshalText() ([]byte, error) {
	switch s {
	case MemberMembershipStatusACTIVE:
		return []byte(s), nil
	case MemberMembershipStatusLEFT:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *MemberMembershipStatus) UnmarshalText(data []byte) error {
	switch MemberMembershipStatus(data) {
	case MemberMembershipStatusACTIVE:
		*s = MemberMembershipStatusACTIVE
		return nil
	case MemberMembershipStatusLEFT:
		*s = MemberMembershipStatusLEFT
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/MemberProfile
type MemberProfile struct {
	DisplayName string    `json:"displayName"`
	IdNumber    OptString `json:"idNumber"`
	// User's bio.
	Bio OptString `json:"bio"`
}

// GetDisplayName returns the value of DisplayName.
func (s *MemberProfile) GetDisplayName() string {
	return s.DisplayName
}

// GetIdNumber returns the value of IdNumber.
func (s *MemberProfile) GetIdNumber() OptString {
	return s.IdNumber
}

// GetBio returns the value of Bio.
func (s *MemberProfile) GetBio() OptString {
	return s.Bio
}

// SetDisplayName sets the value of DisplayName.
func (s *MemberProfile) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIdNumber sets the value of IdNumber.
func (s *MemberProfile) SetIdNumber(val OptString) {
	s.IdNumber = val
}

// SetBio sets the value of Bio.
func (s *MemberProfile) SetBio(val OptString) {
	s.Bio = val
}

// Role of the member.
// Ref: #/components/schemas/MemberRole
type MemberRole string

const (
	MemberRoleOWNER  MemberRole = "OWNER"
	MemberRoleADMIN  MemberRole = "ADMIN"
	MemberRoleMEMBER MemberRole = "MEMBER"
	MemberRoleGUEST  MemberRole = "GUEST"
)

// AllValues returns all MemberRole values.
func (MemberRole) AllValues() []MemberRole {
	return []MemberRole{
		MemberRoleOWNER,
		MemberRoleADMIN,
		MemberRoleMEMBER,
		MemberRoleGUEST,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s MemberRole) MarshalText() ([]byte, error) {
	switch s {
	case MemberRoleOWNER:
		return []byte(s), nil
	case MemberRoleADMIN:
		return []byte(s), nil
	case MemberRoleMEMBER:
		return []byte(s), nil
	case MemberRoleGUEST:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *MemberRole) UnmarshalText(data []byte) error {
	switch MemberRole(data) {
	case MemberRoleOWNER:
		*s = MemberRoleOWNER
		return nil
	case MemberRoleADMIN:
		*s = MemberRoleADMIN
		return nil
	case MemberRoleMEMBER:
		*s = MemberRoleMEMBER
		return nil
	case MemberRoleGUEST:
		*s = MemberRoleGUEST
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type MembersResponse struct {
	Members []Member `json:"members"`
}

// GetMembers returns the value of Members.
func (s *MembersResponse) GetMembers() []Member {
	return s.Members
}

// SetMembers sets the value of Members.
func (s *MembersResponse) SetMembers(val []Member) {
	s.Members = val
}

func (*MembersResponse) aPIV1MembersGetRes() {}

// RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807.
type NotFoundError struct {
	// The HTTP status code generated for this occurrence of the problem.
	Status OptInt `json:"status"`
	// A short, human-readable summary of the problem type.
	Title OptString `json:"title"`
	// A human-readable explanation specific to this occurrence of the problem.
	Detail OptString `json:"detail"`
	// A custom code identifying the specific error.
	Code OptString `json:"code"`
}

// GetStatus returns the value of Status.
func (s *NotFoundError) GetStatus() OptInt {
	return s.Status
}

// GetTitle returns the value of Title.
func (s *NotFoundError) GetTitle() OptString {
	return s.Title
}

// GetDetail returns the value of Detail.
func (s *NotFoundError) GetDetail() OptString {
	return s.Detail
}

// GetCode returns the value of Code.
func (s *NotFoundError) GetCode() OptString {
	return s.Code
}

// SetStatus sets the value of Status.
func (s *NotFoundError) SetStatus(val OptInt) {
	s.Status = val
}

// SetTitle sets the value of Title.
func (s *NotFoundError) SetTitle(val OptString) {
	s.Title = val
}

// SetDetail sets the value of Detail.
func (s *NotFoundError) SetDetail(val OptString) {
	s.Detail = val
}

// SetCode sets the value of Code.
func (s *NotFoundError) SetCode(val OptString) {
	s.Code = val
}

func (*NotFoundError) aPIV1MeWorkspaceLeavePostRes()     {}
func (*NotFoundError) aPIV1MembersMemberIdDeleteRes()    {}
func (*NotFoundError) aPIV1MembersMemberIdRolePutRes()   {}
func (*NotFoundError) aPIV1WorkspacesWorkspaceIdPutRes() {}
func (*NotFoundError) resendInvitationRes()              {}
func (*NotFoundError) revokeInvitationRes()              {}

// NewOptAPIV1InvitationsGetStatus returns new OptAPIV1InvitationsGetStatus with value set to v.
func NewOptAPIV1InvitationsGetStatus(v APIV1InvitationsGetStatus) OptAPIV1InvitationsGetStatus {
	return OptAPIV1InvitationsGetStatus{
		Value: v,
		Set:   true,
	}
}

// OptAPIV1InvitationsGetStatus is optional APIV1InvitationsGetStatus.
type OptAPIV1InvitationsGetStatus struct {
	Value APIV1InvitationsGetStatus
	Set   bool
}

// IsSet returns true if OptAPIV1InvitationsGetStatus was set.
func (o OptAPIV1InvitationsGetStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAPIV1InvitationsGetStatus) Reset() {
	var v APIV1InvitationsGetStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAPIV1InvitationsGetStatus) SetTo(v APIV1InvitationsGetStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAPIV1InvitationsGetStatus) Get() (v APIV1InvitationsGetStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAPIV1InvitationsGetStatus) Or(d APIV1InvitationsGetStatus) APIV1InvitationsGetStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptMember returns new OptMember with value set to v.
func NewOptMember(v Member) OptMember {
	return OptMember{
		Value: v,
		Set:   true,
	}
}

// OptMember is optional Member.
type OptMember struct {
	Value Member
	Set   bool
}

// IsSet returns true if OptMember was set.
func (o OptMember) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMember) Reset() {
	var v Member
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMember) SetTo(v Member) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMember) Get() (v Member, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptMember) Or(d Member) Member {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptURI returns new OptURI with value set to v.
func NewOptURI(v url.URL) OptURI {
	return OptURI{
		Value: v,
		Set:   true,
	}
}

// OptURI is optional url.URL.
type OptURI struct {
	Value url.URL
	Set   bool
}

// IsSet returns true if OptURI was set.
func (o OptURI) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptURI) Reset() {
	var v url.URL
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptURI) SetTo(v url.URL) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptURI) Get() (v url.URL, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptURI) Or(d url.URL) url.URL {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptWorkspace returns new OptWorkspace with value set to v.
func NewOptWorkspace(v Workspace) OptWorkspace {
	return OptWorkspace{
		Value: v,
		Set:   true,
	}
}

// OptWorkspace is optional Workspace.
type OptWorkspace struct {
	Value Workspace
	Set   bool
}

// IsSet returns true if OptWorkspace was set.
func (o OptWorkspace) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptWorkspace) Reset() {
	var v Workspace
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptWorkspace) SetTo(v Workspace) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptWorkspace) Get() (v Workspace, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptWorkspace) Or(d Workspace) Workspace {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// ProcessInvitationEmailOK is response for ProcessInvitationEmail operation.
type ProcessInvitationEmailOK struct{}

func (*ProcessInvitationEmailOK) processInvitationEmailRes() {}

type ProcessInvitationEmailReq struct {
	// The invitation token.
	Token uuid.UUID `json:"token"`
	// The user's email address.
	Email string `json:"email"`
}

// GetToken returns the value of Token.
func (s *ProcessInvitationEmailReq) GetToken() uuid.UUID {
	return s.Token
}

// GetEmail returns the value of Email.
func (s *ProcessInvitationEmailReq) GetEmail() string {
	return s.Email
}

// SetToken sets the value of Token.
func (s *ProcessInvitationEmailReq) SetToken(val uuid.UUID) {
	s.Token = val
}

// SetEmail sets the value of Email.
func (s *ProcessInvitationEmailReq) SetEmail(val string) {
	s.Email = val
}

type ProcessInvitationOAuthReq struct {
	// The invitation token.
	Token uuid.UUID `json:"token"`
}

// GetToken returns the value of Token.
func (s *ProcessInvitationOAuthReq) GetToken() uuid.UUID {
	return s.Token
}

// SetToken sets the value of Token.
func (s *ProcessInvitationOAuthReq) SetToken(val uuid.UUID) {
	s.Token = val
}

// Ref: #/components/schemas/ReceivedInvitation
type ReceivedInvitation struct {
	Invitation Invitation `json:"invitation"`
	Inviter    Inviter    `json:"inviter"`
}

// GetInvitation returns the value of Invitation.
func (s *ReceivedInvitation) GetInvitation() Invitation {
	return s.Invitation
}

// GetInviter returns the value of Inviter.
func (s *ReceivedInvitation) GetInviter() Inviter {
	return s.Inviter
}

// SetInvitation sets the value of Invitation.
func (s *ReceivedInvitation) SetInvitation(val Invitation) {
	s.Invitation = val
}

// SetInviter sets the value of Inviter.
func (s *ReceivedInvitation) SetInviter(val Inviter) {
	s.Inviter = val
}

type RemoveProfilePhotoResponse struct {
	Me Me `json:"me"`
}

// GetMe returns the value of Me.
func (s *RemoveProfilePhotoResponse) GetMe() Me {
	return s.Me
}

// SetMe sets the value of Me.
func (s *RemoveProfilePhotoResponse) SetMe(val Me) {
	s.Me = val
}

func (*RemoveProfilePhotoResponse) aPIV1MeProfilePhotoDeleteRes() {}

// RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807.
type TooManyRequestsError struct {
	// The HTTP status code generated for this occurrence of the problem.
	Status OptInt `json:"status"`
	// A short, human-readable summary of the problem type.
	Title OptString `json:"title"`
	// A human-readable explanation specific to this occurrence of the problem.
	Detail OptString `json:"detail"`
	// A custom code identifying the specific error.
	Code OptString `json:"code"`
}

// GetStatus returns the value of Status.
func (s *TooManyRequestsError) GetStatus() OptInt {
	return s.Status
}

// GetTitle returns the value of Title.
func (s *TooManyRequestsError) GetTitle() OptString {
	return s.Title
}

// GetDetail returns the value of Detail.
func (s *TooManyRequestsError) GetDetail() OptString {
	return s.Detail
}

// GetCode returns the value of Code.
func (s *TooManyRequestsError) GetCode() OptString {
	return s.Code
}

// SetStatus sets the value of Status.
func (s *TooManyRequestsError) SetStatus(val OptInt) {
	s.Status = val
}

// SetTitle sets the value of Title.
func (s *TooManyRequestsError) SetTitle(val OptString) {
	s.Title = val
}

// SetDetail sets the value of Detail.
func (s *TooManyRequestsError) SetDetail(val OptString) {
	s.Detail = val
}

// SetCode sets the value of Code.
func (s *TooManyRequestsError) SetCode(val OptString) {
	s.Code = val
}

func (*TooManyRequestsError) aPIV1AuthOtpPostRes()       {}
func (*TooManyRequestsError) aPIV1AuthOtpVerifyPostRes() {}

// RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807.
type UnauthorizedError struct {
	// The HTTP status code generated for this occurrence of the problem.
	Status OptInt `json:"status"`
	// A short, human-readable summary of the problem type.
	Title OptString `json:"title"`
	// A human-readable explanation specific to this occurrence of the problem.
	Detail OptString `json:"detail"`
	// A custom code identifying the specific error.
	Code OptString `json:"code"`
}

// GetStatus returns the value of Status.
func (s *UnauthorizedError) GetStatus() OptInt {
	return s.Status
}

// GetTitle returns the value of Title.
func (s *UnauthorizedError) GetTitle() OptString {
	return s.Title
}

// GetDetail returns the value of Detail.
func (s *UnauthorizedError) GetDetail() OptString {
	return s.Detail
}

// GetCode returns the value of Code.
func (s *UnauthorizedError) GetCode() OptString {
	return s.Code
}

// SetStatus sets the value of Status.
func (s *UnauthorizedError) SetStatus(val OptInt) {
	s.Status = val
}

// SetTitle sets the value of Title.
func (s *UnauthorizedError) SetTitle(val OptString) {
	s.Title = val
}

// SetDetail sets the value of Detail.
func (s *UnauthorizedError) SetDetail(val OptString) {
	s.Detail = val
}

// SetCode sets the value of Code.
func (s *UnauthorizedError) SetCode(val OptString) {
	s.Code = val
}

func (*UnauthorizedError) aPIV1AuthOAuthPostRes()             {}
func (*UnauthorizedError) aPIV1AuthOtpVerifyPostRes()         {}
func (*UnauthorizedError) aPIV1InvitationsGetRes()            {}
func (*UnauthorizedError) aPIV1MeGetRes()                     {}
func (*UnauthorizedError) aPIV1MeMemberProfilePutRes()        {}
func (*UnauthorizedError) aPIV1MeProfilePhotoDeleteRes()      {}
func (*UnauthorizedError) aPIV1MeProfilePhotoPutRes()         {}
func (*UnauthorizedError) aPIV1MeProfilePutRes()              {}
func (*UnauthorizedError) aPIV1MeWorkspaceLeavePostRes()      {}
func (*UnauthorizedError) aPIV1MembersGetRes()                {}
func (*UnauthorizedError) aPIV1MembersMemberIdDeleteRes()     {}
func (*UnauthorizedError) aPIV1MembersMemberIdRolePutRes()    {}
func (*UnauthorizedError) aPIV1WorkspacesGetRes()             {}
func (*UnauthorizedError) aPIV1WorkspacesPostRes()            {}
func (*UnauthorizedError) aPIV1WorkspacesWorkspaceIdPutRes()  {}
func (*UnauthorizedError) acceptInvitationRes()               {}
func (*UnauthorizedError) inviteMultipleUsersToWorkspaceRes() {}
func (*UnauthorizedError) resendInvitationRes()               {}
func (*UnauthorizedError) revokeInvitationRes()               {}

type UpdateMeMemberProfileResponse struct {
	Me Me `json:"me"`
}

// GetMe returns the value of Me.
func (s *UpdateMeMemberProfileResponse) GetMe() Me {
	return s.Me
}

// SetMe sets the value of Me.
func (s *UpdateMeMemberProfileResponse) SetMe(val Me) {
	s.Me = val
}

func (*UpdateMeMemberProfileResponse) aPIV1MeMemberProfilePutRes() {}

type UpdateMemberRoleResponse struct {
	Member Member `json:"member"`
}

// GetMember returns the value of Member.
func (s *UpdateMemberRoleResponse) GetMember() Member {
	return s.Member
}

// SetMember sets the value of Member.
func (s *UpdateMemberRoleResponse) SetMember(val Member) {
	s.Member = val
}

func (*UpdateMemberRoleResponse) aPIV1MembersMemberIdRolePutRes() {}

type UpdateProfilePhotoResponse struct {
	Me Me `json:"me"`
}

// GetMe returns the value of Me.
func (s *UpdateProfilePhotoResponse) GetMe() Me {
	return s.Me
}

// SetMe sets the value of Me.
func (s *UpdateProfilePhotoResponse) SetMe(val Me) {
	s.Me = val
}

func (*UpdateProfilePhotoResponse) aPIV1MeProfilePhotoPutRes() {}

type UpdateProfileResponse struct {
	Me Me `json:"me"`
}

// GetMe returns the value of Me.
func (s *UpdateProfileResponse) GetMe() Me {
	return s.Me
}

// SetMe sets the value of Me.
func (s *UpdateProfileResponse) SetMe(val Me) {
	s.Me = val
}

func (*UpdateProfileResponse) aPIV1MeProfilePutRes() {}

type UpdateWorkspaceResponse struct {
	Workspace Workspace `json:"workspace"`
}

// GetWorkspace returns the value of Workspace.
func (s *UpdateWorkspaceResponse) GetWorkspace() Workspace {
	return s.Workspace
}

// SetWorkspace sets the value of Workspace.
func (s *UpdateWorkspaceResponse) SetWorkspace(val Workspace) {
	s.Workspace = val
}

func (*UpdateWorkspaceResponse) aPIV1WorkspacesWorkspaceIdPutRes() {}

// Ref: #/components/schemas/User
type User struct {
	UserId      uuid.UUID `json:"userId"`
	Email       string    `json:"email"`
	Name        OptString `json:"name"`
	PhoneNumber OptString `json:"phoneNumber"`
	Photo       OptURI    `json:"photo"`
}

// GetUserId returns the value of UserId.
func (s *User) GetUserId() uuid.UUID {
	return s.UserId
}

// GetEmail returns the value of Email.
func (s *User) GetEmail() string {
	return s.Email
}

// GetName returns the value of Name.
func (s *User) GetName() OptString {
	return s.Name
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *User) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetPhoto returns the value of Photo.
func (s *User) GetPhoto() OptURI {
	return s.Photo
}

// SetUserId sets the value of UserId.
func (s *User) SetUserId(val uuid.UUID) {
	s.UserId = val
}

// SetEmail sets the value of Email.
func (s *User) SetEmail(val string) {
	s.Email = val
}

// SetName sets the value of Name.
func (s *User) SetName(val OptString) {
	s.Name = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *User) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetPhoto sets the value of Photo.
func (s *User) SetPhoto(val OptURI) {
	s.Photo = val
}

// Ref: #/components/schemas/Workspace
type Workspace struct {
	// Workspace id in the format of UUID v7.
	WorkspaceId uuid.UUID `json:"workspaceId"`
	// Workspace name.
	Name string `json:"name"`
	// Workspace subdomain (e.x. example-test).
	Subdomain string `json:"subdomain"`
}

// GetWorkspaceId returns the value of WorkspaceId.
func (s *Workspace) GetWorkspaceId() uuid.UUID {
	return s.WorkspaceId
}

// GetName returns the value of Name.
func (s *Workspace) GetName() string {
	return s.Name
}

// GetSubdomain returns the value of Subdomain.
func (s *Workspace) GetSubdomain() string {
	return s.Subdomain
}

// SetWorkspaceId sets the value of WorkspaceId.
func (s *Workspace) SetWorkspaceId(val uuid.UUID) {
	s.WorkspaceId = val
}

// SetName sets the value of Name.
func (s *Workspace) SetName(val string) {
	s.Name = val
}

// SetSubdomain sets the value of Subdomain.
func (s *Workspace) SetSubdomain(val string) {
	s.Subdomain = val
}

type WorkspacesResponse struct {
	Workspaces []Workspace `json:"workspaces"`
}

// GetWorkspaces returns the value of Workspaces.
func (s *WorkspacesResponse) GetWorkspaces() []Workspace {
	return s.Workspaces
}

// SetWorkspaces sets the value of Workspaces.
func (s *WorkspacesResponse) SetWorkspaces(val []Workspace) {
	s.Workspaces = val
}

func (*WorkspacesResponse) aPIV1WorkspacesGetRes() {}
