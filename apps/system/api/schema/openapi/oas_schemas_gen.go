// Code generated by ogen, DO NOT EDIT.

package openapi

import (
	"time"

	"github.com/google/uuid"
)

// APIV1AuthOtpPostOK is response for APIV1AuthOtpPost operation.
type APIV1AuthOtpPostOK struct{}

func (*APIV1AuthOtpPostOK) aPIV1AuthOtpPostRes() {}

type APIV1AuthOtpPostReq struct {
	Email string `json:"email"`
}

// GetEmail returns the value of Email.
func (s *APIV1AuthOtpPostReq) GetEmail() string {
	return s.Email
}

// SetEmail sets the value of Email.
func (s *APIV1AuthOtpPostReq) SetEmail(val string) {
	s.Email = val
}

type APIV1AuthOtpVerifyPostReq struct {
	Email string `json:"email"`
	Otp   string `json:"otp"`
}

// GetEmail returns the value of Email.
func (s *APIV1AuthOtpVerifyPostReq) GetEmail() string {
	return s.Email
}

// GetOtp returns the value of Otp.
func (s *APIV1AuthOtpVerifyPostReq) GetOtp() string {
	return s.Otp
}

// SetEmail sets the value of Email.
func (s *APIV1AuthOtpVerifyPostReq) SetEmail(val string) {
	s.Email = val
}

// SetOtp sets the value of Otp.
func (s *APIV1AuthOtpVerifyPostReq) SetOtp(val string) {
	s.Otp = val
}

type APIV1MeProfilePutReq struct {
	User User `json:"user"`
}

// GetUser returns the value of User.
func (s *APIV1MeProfilePutReq) GetUser() User {
	return s.User
}

// SetUser sets the value of User.
func (s *APIV1MeProfilePutReq) SetUser(val User) {
	s.User = val
}

type APIV1PingGetOK struct {
	// Ping response message.
	Message OptString `json:"message"`
}

// GetMessage returns the value of Message.
func (s *APIV1PingGetOK) GetMessage() OptString {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *APIV1PingGetOK) SetMessage(val OptString) {
	s.Message = val
}

func (*APIV1PingGetOK) aPIV1PingGetRes() {}

type APIV1WorkspacesPostReq struct {
	// Workspace subdomain (e.x. example-test).
	Subdomain string `json:"subdomain"`
}

// GetSubdomain returns the value of Subdomain.
func (s *APIV1WorkspacesPostReq) GetSubdomain() string {
	return s.Subdomain
}

// SetSubdomain sets the value of Subdomain.
func (s *APIV1WorkspacesPostReq) SetSubdomain(val string) {
	s.Subdomain = val
}

// RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807.
type BadRequestError struct {
	// The HTTP status code generated for this occurrence of the problem.
	Status OptInt `json:"status"`
	// Error type.
	Type OptString `json:"type"`
	// A short, human-readable summary of the problem type.
	Title OptString `json:"title"`
	// A human-readable explanation specific to this occurrence of the problem.
	Detail OptString `json:"detail"`
	// A custom code identifying the specific error.
	Code OptString `json:"code"`
}

// GetStatus returns the value of Status.
func (s *BadRequestError) GetStatus() OptInt {
	return s.Status
}

// GetType returns the value of Type.
func (s *BadRequestError) GetType() OptString {
	return s.Type
}

// GetTitle returns the value of Title.
func (s *BadRequestError) GetTitle() OptString {
	return s.Title
}

// GetDetail returns the value of Detail.
func (s *BadRequestError) GetDetail() OptString {
	return s.Detail
}

// GetCode returns the value of Code.
func (s *BadRequestError) GetCode() OptString {
	return s.Code
}

// SetStatus sets the value of Status.
func (s *BadRequestError) SetStatus(val OptInt) {
	s.Status = val
}

// SetType sets the value of Type.
func (s *BadRequestError) SetType(val OptString) {
	s.Type = val
}

// SetTitle sets the value of Title.
func (s *BadRequestError) SetTitle(val OptString) {
	s.Title = val
}

// SetDetail sets the value of Detail.
func (s *BadRequestError) SetDetail(val OptString) {
	s.Detail = val
}

// SetCode sets the value of Code.
func (s *BadRequestError) SetCode(val OptString) {
	s.Code = val
}

func (*BadRequestError) aPIV1AuthOAuthPostRes()             {}
func (*BadRequestError) aPIV1AuthOtpPostRes()               {}
func (*BadRequestError) aPIV1AuthOtpVerifyPostRes()         {}
func (*BadRequestError) aPIV1MeProfilePutRes()              {}
func (*BadRequestError) aPIV1WorkspacesPostRes()            {}
func (*BadRequestError) inviteMultipleUsersToWorkspaceRes() {}
func (*BadRequestError) processInvitationRes()              {}
func (*BadRequestError) verifyInvitationRes()               {}

type Bearer struct {
	Token string
}

// GetToken returns the value of Token.
func (s *Bearer) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *Bearer) SetToken(val string) {
	s.Token = val
}

// RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807.
type ConflictError struct {
	// The HTTP status code generated for this occurrence of the problem.
	Status OptInt `json:"status"`
	// Error type.
	Type OptString `json:"type"`
	// A short, human-readable summary of the problem type.
	Title OptString `json:"title"`
	// A human-readable explanation specific to this occurrence of the problem.
	Detail OptString `json:"detail"`
	// A custom code identifying the specific error.
	Code OptString `json:"code"`
}

// GetStatus returns the value of Status.
func (s *ConflictError) GetStatus() OptInt {
	return s.Status
}

// GetType returns the value of Type.
func (s *ConflictError) GetType() OptString {
	return s.Type
}

// GetTitle returns the value of Title.
func (s *ConflictError) GetTitle() OptString {
	return s.Title
}

// GetDetail returns the value of Detail.
func (s *ConflictError) GetDetail() OptString {
	return s.Detail
}

// GetCode returns the value of Code.
func (s *ConflictError) GetCode() OptString {
	return s.Code
}

// SetStatus sets the value of Status.
func (s *ConflictError) SetStatus(val OptInt) {
	s.Status = val
}

// SetType sets the value of Type.
func (s *ConflictError) SetType(val OptString) {
	s.Type = val
}

// SetTitle sets the value of Title.
func (s *ConflictError) SetTitle(val OptString) {
	s.Title = val
}

// SetDetail sets the value of Detail.
func (s *ConflictError) SetDetail(val OptString) {
	s.Detail = val
}

// SetCode sets the value of Code.
func (s *ConflictError) SetCode(val OptString) {
	s.Code = val
}

func (*ConflictError) aPIV1WorkspacesPostRes() {}

// RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807.
type InternalServerError struct {
	// The HTTP status code generated for this occurrence of the problem.
	Status OptInt `json:"status"`
	// Error type.
	Type OptString `json:"type"`
	// A short, human-readable summary of the problem type.
	Title OptString `json:"title"`
	// A human-readable explanation specific to this occurrence of the problem.
	Detail OptString `json:"detail"`
	// A custom code identifying the specific error.
	Code OptString `json:"code"`
}

// GetStatus returns the value of Status.
func (s *InternalServerError) GetStatus() OptInt {
	return s.Status
}

// GetType returns the value of Type.
func (s *InternalServerError) GetType() OptString {
	return s.Type
}

// GetTitle returns the value of Title.
func (s *InternalServerError) GetTitle() OptString {
	return s.Title
}

// GetDetail returns the value of Detail.
func (s *InternalServerError) GetDetail() OptString {
	return s.Detail
}

// GetCode returns the value of Code.
func (s *InternalServerError) GetCode() OptString {
	return s.Code
}

// SetStatus sets the value of Status.
func (s *InternalServerError) SetStatus(val OptInt) {
	s.Status = val
}

// SetType sets the value of Type.
func (s *InternalServerError) SetType(val OptString) {
	s.Type = val
}

// SetTitle sets the value of Title.
func (s *InternalServerError) SetTitle(val OptString) {
	s.Title = val
}

// SetDetail sets the value of Detail.
func (s *InternalServerError) SetDetail(val OptString) {
	s.Detail = val
}

// SetCode sets the value of Code.
func (s *InternalServerError) SetCode(val OptString) {
	s.Code = val
}

func (*InternalServerError) aPIV1AuthOAuthPostRes()             {}
func (*InternalServerError) aPIV1AuthOtpPostRes()               {}
func (*InternalServerError) aPIV1AuthOtpVerifyPostRes()         {}
func (*InternalServerError) aPIV1InvitationsGetRes()            {}
func (*InternalServerError) aPIV1MeGetRes()                     {}
func (*InternalServerError) aPIV1MeProfilePutRes()              {}
func (*InternalServerError) aPIV1MembersGetRes()                {}
func (*InternalServerError) aPIV1PingGetRes()                   {}
func (*InternalServerError) aPIV1WorkspacesGetRes()             {}
func (*InternalServerError) aPIV1WorkspacesPostRes()            {}
func (*InternalServerError) acceptInvitationRes()               {}
func (*InternalServerError) inviteMultipleUsersToWorkspaceRes() {}
func (*InternalServerError) loginRes()                          {}
func (*InternalServerError) processInvitationRes()              {}
func (*InternalServerError) verifyInvitationRes()               {}

// Ref: #/components/schemas/Invitation
type Invitation struct {
	// Invitation ID.
	ID        uuid.UUID `json:"id"`
	Verified  bool      `json:"verified"`
	ExpiredAt time.Time `json:"expiredAt"`
	// Email of the invitee.
	InviteeEmail string `json:"inviteeEmail"`
	// Display name of the invitee.
	DisplayName string `json:"displayName"`
}

// GetID returns the value of ID.
func (s *Invitation) GetID() uuid.UUID {
	return s.ID
}

// GetVerified returns the value of Verified.
func (s *Invitation) GetVerified() bool {
	return s.Verified
}

// GetExpiredAt returns the value of ExpiredAt.
func (s *Invitation) GetExpiredAt() time.Time {
	return s.ExpiredAt
}

// GetInviteeEmail returns the value of InviteeEmail.
func (s *Invitation) GetInviteeEmail() string {
	return s.InviteeEmail
}

// GetDisplayName returns the value of DisplayName.
func (s *Invitation) GetDisplayName() string {
	return s.DisplayName
}

// SetID sets the value of ID.
func (s *Invitation) SetID(val uuid.UUID) {
	s.ID = val
}

// SetVerified sets the value of Verified.
func (s *Invitation) SetVerified(val bool) {
	s.Verified = val
}

// SetExpiredAt sets the value of ExpiredAt.
func (s *Invitation) SetExpiredAt(val time.Time) {
	s.ExpiredAt = val
}

// SetInviteeEmail sets the value of InviteeEmail.
func (s *Invitation) SetInviteeEmail(val string) {
	s.InviteeEmail = val
}

// SetDisplayName sets the value of DisplayName.
func (s *Invitation) SetDisplayName(val string) {
	s.DisplayName = val
}

type InvitationInfoResponse struct {
	WorkspaceName string `json:"workspaceName"`
	Verified      bool   `json:"verified"`
}

// GetWorkspaceName returns the value of WorkspaceName.
func (s *InvitationInfoResponse) GetWorkspaceName() string {
	return s.WorkspaceName
}

// GetVerified returns the value of Verified.
func (s *InvitationInfoResponse) GetVerified() bool {
	return s.Verified
}

// SetWorkspaceName sets the value of WorkspaceName.
func (s *InvitationInfoResponse) SetWorkspaceName(val string) {
	s.WorkspaceName = val
}

// SetVerified sets the value of Verified.
func (s *InvitationInfoResponse) SetVerified(val bool) {
	s.Verified = val
}

func (*InvitationInfoResponse) verifyInvitationRes() {}

type Invitations []Invitation

func (*Invitations) aPIV1InvitationsGetRes() {}

type InvitationsBulkResponse struct {
	// Total number of invitations.
	Total                 int         `json:"total"`
	SuccessfulInvitations Invitations `json:"successfulInvitations"`
	FailedInvitations     Invitations `json:"failedInvitations"`
	RegisteredInvitations Invitations `json:"registeredInvitations"`
}

// GetTotal returns the value of Total.
func (s *InvitationsBulkResponse) GetTotal() int {
	return s.Total
}

// GetSuccessfulInvitations returns the value of SuccessfulInvitations.
func (s *InvitationsBulkResponse) GetSuccessfulInvitations() Invitations {
	return s.SuccessfulInvitations
}

// GetFailedInvitations returns the value of FailedInvitations.
func (s *InvitationsBulkResponse) GetFailedInvitations() Invitations {
	return s.FailedInvitations
}

// GetRegisteredInvitations returns the value of RegisteredInvitations.
func (s *InvitationsBulkResponse) GetRegisteredInvitations() Invitations {
	return s.RegisteredInvitations
}

// SetTotal sets the value of Total.
func (s *InvitationsBulkResponse) SetTotal(val int) {
	s.Total = val
}

// SetSuccessfulInvitations sets the value of SuccessfulInvitations.
func (s *InvitationsBulkResponse) SetSuccessfulInvitations(val Invitations) {
	s.SuccessfulInvitations = val
}

// SetFailedInvitations sets the value of FailedInvitations.
func (s *InvitationsBulkResponse) SetFailedInvitations(val Invitations) {
	s.FailedInvitations = val
}

// SetRegisteredInvitations sets the value of RegisteredInvitations.
func (s *InvitationsBulkResponse) SetRegisteredInvitations(val Invitations) {
	s.RegisteredInvitations = val
}

func (*InvitationsBulkResponse) inviteMultipleUsersToWorkspaceRes() {}

type InviteMultipleUsersToWorkspaceReq struct {
	Invitees []Invitee `json:"invitees"`
}

// GetInvitees returns the value of Invitees.
func (s *InviteMultipleUsersToWorkspaceReq) GetInvitees() []Invitee {
	return s.Invitees
}

// SetInvitees sets the value of Invitees.
func (s *InviteMultipleUsersToWorkspaceReq) SetInvitees(val []Invitee) {
	s.Invitees = val
}

// Ref: #/components/schemas/Invitee
type Invitee struct {
	// Display name of the invitee.
	Name string `json:"name"`
	// Email of the invitee.
	Email string `json:"email"`
}

// GetName returns the value of Name.
func (s *Invitee) GetName() string {
	return s.Name
}

// GetEmail returns the value of Email.
func (s *Invitee) GetEmail() string {
	return s.Email
}

// SetName sets the value of Name.
func (s *Invitee) SetName(val string) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *Invitee) SetEmail(val string) {
	s.Email = val
}

// Ref: #/components/schemas/Inviter
type Inviter struct {
	Member    Member    `json:"member"`
	Workspace Workspace `json:"workspace"`
}

// GetMember returns the value of Member.
func (s *Inviter) GetMember() Member {
	return s.Member
}

// GetWorkspace returns the value of Workspace.
func (s *Inviter) GetWorkspace() Workspace {
	return s.Workspace
}

// SetMember sets the value of Member.
func (s *Inviter) SetMember(val Member) {
	s.Member = val
}

// SetWorkspace sets the value of Workspace.
func (s *Inviter) SetWorkspace(val Workspace) {
	s.Workspace = val
}

// Ref: #/components/schemas/JwtToken
type JwtToken struct {
	// JWT token.
	Token string `json:"token"`
}

// GetToken returns the value of Token.
func (s *JwtToken) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *JwtToken) SetToken(val string) {
	s.Token = val
}

func (*JwtToken) aPIV1AuthOtpVerifyPostRes() {}

// Ref: #/components/schemas/Me
type Me struct {
	Self                User                 `json:"self"`
	Member              OptMember            `json:"member"`
	CurrentWorkspace    OptWorkspace         `json:"currentWorkspace"`
	JoinedWorkspaces    []Workspace          `json:"joinedWorkspaces"`
	ReceivedInvitations []ReceivedInvitation `json:"receivedInvitations"`
}

// GetSelf returns the value of Self.
func (s *Me) GetSelf() User {
	return s.Self
}

// GetMember returns the value of Member.
func (s *Me) GetMember() OptMember {
	return s.Member
}

// GetCurrentWorkspace returns the value of CurrentWorkspace.
func (s *Me) GetCurrentWorkspace() OptWorkspace {
	return s.CurrentWorkspace
}

// GetJoinedWorkspaces returns the value of JoinedWorkspaces.
func (s *Me) GetJoinedWorkspaces() []Workspace {
	return s.JoinedWorkspaces
}

// GetReceivedInvitations returns the value of ReceivedInvitations.
func (s *Me) GetReceivedInvitations() []ReceivedInvitation {
	return s.ReceivedInvitations
}

// SetSelf sets the value of Self.
func (s *Me) SetSelf(val User) {
	s.Self = val
}

// SetMember sets the value of Member.
func (s *Me) SetMember(val OptMember) {
	s.Member = val
}

// SetCurrentWorkspace sets the value of CurrentWorkspace.
func (s *Me) SetCurrentWorkspace(val OptWorkspace) {
	s.CurrentWorkspace = val
}

// SetJoinedWorkspaces sets the value of JoinedWorkspaces.
func (s *Me) SetJoinedWorkspaces(val []Workspace) {
	s.JoinedWorkspaces = val
}

// SetReceivedInvitations sets the value of ReceivedInvitations.
func (s *Me) SetReceivedInvitations(val []ReceivedInvitation) {
	s.ReceivedInvitations = val
}

func (*Me) aPIV1MeGetRes()        {}
func (*Me) aPIV1MeProfilePutRes() {}
func (*Me) acceptInvitationRes()  {}
func (*Me) loginRes()             {}

// Ref: #/components/schemas/Member
type Member struct {
	Profile MemberProfile `json:"profile"`
	User    User          `json:"user"`
}

// GetProfile returns the value of Profile.
func (s *Member) GetProfile() MemberProfile {
	return s.Profile
}

// GetUser returns the value of User.
func (s *Member) GetUser() User {
	return s.User
}

// SetProfile sets the value of Profile.
func (s *Member) SetProfile(val MemberProfile) {
	s.Profile = val
}

// SetUser sets the value of User.
func (s *Member) SetUser(val User) {
	s.User = val
}

// Ref: #/components/schemas/MemberProfile
type MemberProfile struct {
	// Base32 encoded UUID.
	ID          string    `json:"id"`
	DisplayName string    `json:"displayName"`
	IdNumber    OptString `json:"idNumber"`
}

// GetID returns the value of ID.
func (s *MemberProfile) GetID() string {
	return s.ID
}

// GetDisplayName returns the value of DisplayName.
func (s *MemberProfile) GetDisplayName() string {
	return s.DisplayName
}

// GetIdNumber returns the value of IdNumber.
func (s *MemberProfile) GetIdNumber() OptString {
	return s.IdNumber
}

// SetID sets the value of ID.
func (s *MemberProfile) SetID(val string) {
	s.ID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *MemberProfile) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIdNumber sets the value of IdNumber.
func (s *MemberProfile) SetIdNumber(val OptString) {
	s.IdNumber = val
}

type Members []Member

func (*Members) aPIV1MembersGetRes() {}

// RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807.
type NotFoundError struct {
	// The HTTP status code generated for this occurrence of the problem.
	Status OptInt `json:"status"`
	// Error type.
	Type OptString `json:"type"`
	// A short, human-readable summary of the problem type.
	Title OptString `json:"title"`
	// A human-readable explanation specific to this occurrence of the problem.
	Detail OptString `json:"detail"`
	// A custom code identifying the specific error.
	Code OptString `json:"code"`
}

// GetStatus returns the value of Status.
func (s *NotFoundError) GetStatus() OptInt {
	return s.Status
}

// GetType returns the value of Type.
func (s *NotFoundError) GetType() OptString {
	return s.Type
}

// GetTitle returns the value of Title.
func (s *NotFoundError) GetTitle() OptString {
	return s.Title
}

// GetDetail returns the value of Detail.
func (s *NotFoundError) GetDetail() OptString {
	return s.Detail
}

// GetCode returns the value of Code.
func (s *NotFoundError) GetCode() OptString {
	return s.Code
}

// SetStatus sets the value of Status.
func (s *NotFoundError) SetStatus(val OptInt) {
	s.Status = val
}

// SetType sets the value of Type.
func (s *NotFoundError) SetType(val OptString) {
	s.Type = val
}

// SetTitle sets the value of Title.
func (s *NotFoundError) SetTitle(val OptString) {
	s.Title = val
}

// SetDetail sets the value of Detail.
func (s *NotFoundError) SetDetail(val OptString) {
	s.Detail = val
}

// SetCode sets the value of Code.
func (s *NotFoundError) SetCode(val OptString) {
	s.Code = val
}

func (*NotFoundError) verifyInvitationRes() {}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptMember returns new OptMember with value set to v.
func NewOptMember(v Member) OptMember {
	return OptMember{
		Value: v,
		Set:   true,
	}
}

// OptMember is optional Member.
type OptMember struct {
	Value Member
	Set   bool
}

// IsSet returns true if OptMember was set.
func (o OptMember) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMember) Reset() {
	var v Member
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMember) SetTo(v Member) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMember) Get() (v Member, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptMember) Or(d Member) Member {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptWorkspace returns new OptWorkspace with value set to v.
func NewOptWorkspace(v Workspace) OptWorkspace {
	return OptWorkspace{
		Value: v,
		Set:   true,
	}
}

// OptWorkspace is optional Workspace.
type OptWorkspace struct {
	Value Workspace
	Set   bool
}

// IsSet returns true if OptWorkspace was set.
func (o OptWorkspace) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptWorkspace) Reset() {
	var v Workspace
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptWorkspace) SetTo(v Workspace) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptWorkspace) Get() (v Workspace, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptWorkspace) Or(d Workspace) Workspace {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// ProcessInvitationOK is response for ProcessInvitation operation.
type ProcessInvitationOK struct{}

func (*ProcessInvitationOK) processInvitationRes() {}

type ProcessInvitationReq struct {
	// The invitation token.
	Token uuid.UUID `json:"token"`
	// The user's email address.
	Email string `json:"email"`
}

// GetToken returns the value of Token.
func (s *ProcessInvitationReq) GetToken() uuid.UUID {
	return s.Token
}

// GetEmail returns the value of Email.
func (s *ProcessInvitationReq) GetEmail() string {
	return s.Email
}

// SetToken sets the value of Token.
func (s *ProcessInvitationReq) SetToken(val uuid.UUID) {
	s.Token = val
}

// SetEmail sets the value of Email.
func (s *ProcessInvitationReq) SetEmail(val string) {
	s.Email = val
}

// Ref: #/components/schemas/ReceivedInvitation
type ReceivedInvitation struct {
	Invitation Invitation `json:"invitation"`
	Inviter    Inviter    `json:"inviter"`
}

// GetInvitation returns the value of Invitation.
func (s *ReceivedInvitation) GetInvitation() Invitation {
	return s.Invitation
}

// GetInviter returns the value of Inviter.
func (s *ReceivedInvitation) GetInviter() Inviter {
	return s.Inviter
}

// SetInvitation sets the value of Invitation.
func (s *ReceivedInvitation) SetInvitation(val Invitation) {
	s.Invitation = val
}

// SetInviter sets the value of Inviter.
func (s *ReceivedInvitation) SetInviter(val Inviter) {
	s.Inviter = val
}

// RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807.
type TooManyRequestsError struct {
	// The HTTP status code generated for this occurrence of the problem.
	Status OptInt `json:"status"`
	// Error type.
	Type OptString `json:"type"`
	// A short, human-readable summary of the problem type.
	Title OptString `json:"title"`
	// A human-readable explanation specific to this occurrence of the problem.
	Detail OptString `json:"detail"`
	// A custom code identifying the specific error.
	Code OptString `json:"code"`
}

// GetStatus returns the value of Status.
func (s *TooManyRequestsError) GetStatus() OptInt {
	return s.Status
}

// GetType returns the value of Type.
func (s *TooManyRequestsError) GetType() OptString {
	return s.Type
}

// GetTitle returns the value of Title.
func (s *TooManyRequestsError) GetTitle() OptString {
	return s.Title
}

// GetDetail returns the value of Detail.
func (s *TooManyRequestsError) GetDetail() OptString {
	return s.Detail
}

// GetCode returns the value of Code.
func (s *TooManyRequestsError) GetCode() OptString {
	return s.Code
}

// SetStatus sets the value of Status.
func (s *TooManyRequestsError) SetStatus(val OptInt) {
	s.Status = val
}

// SetType sets the value of Type.
func (s *TooManyRequestsError) SetType(val OptString) {
	s.Type = val
}

// SetTitle sets the value of Title.
func (s *TooManyRequestsError) SetTitle(val OptString) {
	s.Title = val
}

// SetDetail sets the value of Detail.
func (s *TooManyRequestsError) SetDetail(val OptString) {
	s.Detail = val
}

// SetCode sets the value of Code.
func (s *TooManyRequestsError) SetCode(val OptString) {
	s.Code = val
}

func (*TooManyRequestsError) aPIV1AuthOtpPostRes()       {}
func (*TooManyRequestsError) aPIV1AuthOtpVerifyPostRes() {}

// RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807.
type UnauthorizedError struct {
	// The HTTP status code generated for this occurrence of the problem.
	Status OptInt `json:"status"`
	// Error type.
	Type OptString `json:"type"`
	// A short, human-readable summary of the problem type.
	Title OptString `json:"title"`
	// A human-readable explanation specific to this occurrence of the problem.
	Detail OptString `json:"detail"`
	// A custom code identifying the specific error.
	Code OptString `json:"code"`
}

// GetStatus returns the value of Status.
func (s *UnauthorizedError) GetStatus() OptInt {
	return s.Status
}

// GetType returns the value of Type.
func (s *UnauthorizedError) GetType() OptString {
	return s.Type
}

// GetTitle returns the value of Title.
func (s *UnauthorizedError) GetTitle() OptString {
	return s.Title
}

// GetDetail returns the value of Detail.
func (s *UnauthorizedError) GetDetail() OptString {
	return s.Detail
}

// GetCode returns the value of Code.
func (s *UnauthorizedError) GetCode() OptString {
	return s.Code
}

// SetStatus sets the value of Status.
func (s *UnauthorizedError) SetStatus(val OptInt) {
	s.Status = val
}

// SetType sets the value of Type.
func (s *UnauthorizedError) SetType(val OptString) {
	s.Type = val
}

// SetTitle sets the value of Title.
func (s *UnauthorizedError) SetTitle(val OptString) {
	s.Title = val
}

// SetDetail sets the value of Detail.
func (s *UnauthorizedError) SetDetail(val OptString) {
	s.Detail = val
}

// SetCode sets the value of Code.
func (s *UnauthorizedError) SetCode(val OptString) {
	s.Code = val
}

func (*UnauthorizedError) aPIV1InvitationsGetRes()            {}
func (*UnauthorizedError) aPIV1MeGetRes()                     {}
func (*UnauthorizedError) aPIV1MeProfilePutRes()              {}
func (*UnauthorizedError) aPIV1MembersGetRes()                {}
func (*UnauthorizedError) aPIV1WorkspacesGetRes()             {}
func (*UnauthorizedError) aPIV1WorkspacesPostRes()            {}
func (*UnauthorizedError) acceptInvitationRes()               {}
func (*UnauthorizedError) inviteMultipleUsersToWorkspaceRes() {}
func (*UnauthorizedError) verifyInvitationRes()               {}

// Ref: #/components/schemas/User
type User struct {
	UserId      uuid.UUID `json:"userId"`
	Email       string    `json:"email"`
	Name        OptString `json:"name"`
	PhoneNumber OptString `json:"phoneNumber"`
}

// GetUserId returns the value of UserId.
func (s *User) GetUserId() uuid.UUID {
	return s.UserId
}

// GetEmail returns the value of Email.
func (s *User) GetEmail() string {
	return s.Email
}

// GetName returns the value of Name.
func (s *User) GetName() OptString {
	return s.Name
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *User) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// SetUserId sets the value of UserId.
func (s *User) SetUserId(val uuid.UUID) {
	s.UserId = val
}

// SetEmail sets the value of Email.
func (s *User) SetEmail(val string) {
	s.Email = val
}

// SetName sets the value of Name.
func (s *User) SetName(val OptString) {
	s.Name = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *User) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

func (*User) aPIV1AuthOAuthPostRes() {}

// Ref: #/components/schemas/Workspace
type Workspace struct {
	// Workspace id in the format of UUID v7.
	WorkspaceId uuid.UUID `json:"workspaceId"`
	// Workspace name.
	Name string `json:"name"`
	// Workspace subdomain (e.x. example-test).
	Subdomain string `json:"subdomain"`
}

// GetWorkspaceId returns the value of WorkspaceId.
func (s *Workspace) GetWorkspaceId() uuid.UUID {
	return s.WorkspaceId
}

// GetName returns the value of Name.
func (s *Workspace) GetName() string {
	return s.Name
}

// GetSubdomain returns the value of Subdomain.
func (s *Workspace) GetSubdomain() string {
	return s.Subdomain
}

// SetWorkspaceId sets the value of WorkspaceId.
func (s *Workspace) SetWorkspaceId(val uuid.UUID) {
	s.WorkspaceId = val
}

// SetName sets the value of Name.
func (s *Workspace) SetName(val string) {
	s.Name = val
}

// SetSubdomain sets the value of Subdomain.
func (s *Workspace) SetSubdomain(val string) {
	s.Subdomain = val
}

func (*Workspace) aPIV1WorkspacesPostRes() {}

type Workspaces []Workspace

func (*Workspaces) aPIV1WorkspacesGetRes() {}
