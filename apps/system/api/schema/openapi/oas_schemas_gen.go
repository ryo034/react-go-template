// Code generated by ogen, DO NOT EDIT.

package openapi

import (
	"time"

	"github.com/google/uuid"
)

// RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807.
type BadRequestError struct {
	// The HTTP status code generated for this occurrence of the problem.
	Status OptInt `json:"status"`
	// Error type.
	Type OptString `json:"type"`
	// A short, human-readable summary of the problem type.
	Title OptString `json:"title"`
	// A human-readable explanation specific to this occurrence of the problem.
	Detail OptString `json:"detail"`
	// Error code.
	Code OptString `json:"code"`
}

// GetStatus returns the value of Status.
func (s *BadRequestError) GetStatus() OptInt {
	return s.Status
}

// GetType returns the value of Type.
func (s *BadRequestError) GetType() OptString {
	return s.Type
}

// GetTitle returns the value of Title.
func (s *BadRequestError) GetTitle() OptString {
	return s.Title
}

// GetDetail returns the value of Detail.
func (s *BadRequestError) GetDetail() OptString {
	return s.Detail
}

// GetCode returns the value of Code.
func (s *BadRequestError) GetCode() OptString {
	return s.Code
}

// SetStatus sets the value of Status.
func (s *BadRequestError) SetStatus(val OptInt) {
	s.Status = val
}

// SetType sets the value of Type.
func (s *BadRequestError) SetType(val OptString) {
	s.Type = val
}

// SetTitle sets the value of Title.
func (s *BadRequestError) SetTitle(val OptString) {
	s.Title = val
}

// SetDetail sets the value of Detail.
func (s *BadRequestError) SetDetail(val OptString) {
	s.Detail = val
}

// SetCode sets the value of Code.
func (s *BadRequestError) SetCode(val OptString) {
	s.Code = val
}

func (*BadRequestError) signUpRes() {}

type Bearer struct {
	Token string
}

// GetToken returns the value of Token.
func (s *Bearer) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *Bearer) SetToken(val string) {
	s.Token = val
}

// RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807.
type InternalServerError struct {
	// The HTTP status code generated for this occurrence of the problem.
	Status OptInt `json:"status"`
	// Error type.
	Type OptString `json:"type"`
	// A short, human-readable summary of the problem type.
	Title OptString `json:"title"`
	// A human-readable explanation specific to this occurrence of the problem.
	Detail OptString `json:"detail"`
	// Error code.
	Code OptString `json:"code"`
}

// GetStatus returns the value of Status.
func (s *InternalServerError) GetStatus() OptInt {
	return s.Status
}

// GetType returns the value of Type.
func (s *InternalServerError) GetType() OptString {
	return s.Type
}

// GetTitle returns the value of Title.
func (s *InternalServerError) GetTitle() OptString {
	return s.Title
}

// GetDetail returns the value of Detail.
func (s *InternalServerError) GetDetail() OptString {
	return s.Detail
}

// GetCode returns the value of Code.
func (s *InternalServerError) GetCode() OptString {
	return s.Code
}

// SetStatus sets the value of Status.
func (s *InternalServerError) SetStatus(val OptInt) {
	s.Status = val
}

// SetType sets the value of Type.
func (s *InternalServerError) SetType(val OptString) {
	s.Type = val
}

// SetTitle sets the value of Title.
func (s *InternalServerError) SetTitle(val OptString) {
	s.Title = val
}

// SetDetail sets the value of Detail.
func (s *InternalServerError) SetDetail(val OptString) {
	s.Detail = val
}

// SetCode sets the value of Code.
func (s *InternalServerError) SetCode(val OptString) {
	s.Code = val
}

func (*InternalServerError) loginRes()    {}
func (*InternalServerError) meGetRes()    {}
func (*InternalServerError) pingGetRes()  {}
func (*InternalServerError) pingPostRes() {}
func (*InternalServerError) signUpRes()   {}

// Ref: #/components/schemas/Me
type Me struct {
	EmailVerified bool           `json:"emailVerified"`
	MultiFactor   OptMultiFactor `json:"multiFactor"`
	Membership    Membership     `json:"membership"`
}

// GetEmailVerified returns the value of EmailVerified.
func (s *Me) GetEmailVerified() bool {
	return s.EmailVerified
}

// GetMultiFactor returns the value of MultiFactor.
func (s *Me) GetMultiFactor() OptMultiFactor {
	return s.MultiFactor
}

// GetMembership returns the value of Membership.
func (s *Me) GetMembership() Membership {
	return s.Membership
}

// SetEmailVerified sets the value of EmailVerified.
func (s *Me) SetEmailVerified(val bool) {
	s.EmailVerified = val
}

// SetMultiFactor sets the value of MultiFactor.
func (s *Me) SetMultiFactor(val OptMultiFactor) {
	s.MultiFactor = val
}

// SetMembership sets the value of Membership.
func (s *Me) SetMembership(val Membership) {
	s.Membership = val
}

func (*Me) loginRes()  {}
func (*Me) meGetRes()  {}
func (*Me) signUpRes() {}

// Ref: #/components/schemas/Member
type Member struct {
	IdNumber OptString `json:"idNumber"`
	User     User      `json:"user"`
}

// GetIdNumber returns the value of IdNumber.
func (s *Member) GetIdNumber() OptString {
	return s.IdNumber
}

// GetUser returns the value of User.
func (s *Member) GetUser() User {
	return s.User
}

// SetIdNumber sets the value of IdNumber.
func (s *Member) SetIdNumber(val OptString) {
	s.IdNumber = val
}

// SetUser sets the value of User.
func (s *Member) SetUser(val User) {
	s.User = val
}

// Ref: #/components/schemas/Membership
type Membership struct {
	Member    Member           `json:"member"`
	Workspace Workspace        `json:"workspace"`
	Period    MembershipPeriod `json:"period"`
}

// GetMember returns the value of Member.
func (s *Membership) GetMember() Member {
	return s.Member
}

// GetWorkspace returns the value of Workspace.
func (s *Membership) GetWorkspace() Workspace {
	return s.Workspace
}

// GetPeriod returns the value of Period.
func (s *Membership) GetPeriod() MembershipPeriod {
	return s.Period
}

// SetMember sets the value of Member.
func (s *Membership) SetMember(val Member) {
	s.Member = val
}

// SetWorkspace sets the value of Workspace.
func (s *Membership) SetWorkspace(val Workspace) {
	s.Workspace = val
}

// SetPeriod sets the value of Period.
func (s *Membership) SetPeriod(val MembershipPeriod) {
	s.Period = val
}

// Ref: #/components/schemas/MembershipPeriod
type MembershipPeriod struct {
	Start time.Time `json:"start"`
	End   time.Time `json:"end"`
}

// GetStart returns the value of Start.
func (s *MembershipPeriod) GetStart() time.Time {
	return s.Start
}

// GetEnd returns the value of End.
func (s *MembershipPeriod) GetEnd() time.Time {
	return s.End
}

// SetStart sets the value of Start.
func (s *MembershipPeriod) SetStart(val time.Time) {
	s.Start = val
}

// SetEnd sets the value of End.
func (s *MembershipPeriod) SetEnd(val time.Time) {
	s.End = val
}

// Ref: #/components/schemas/MultiFactor
type MultiFactor struct {
	FactorId    string `json:"factorId"`
	PhoneNumber string `json:"phoneNumber"`
}

// GetFactorId returns the value of FactorId.
func (s *MultiFactor) GetFactorId() string {
	return s.FactorId
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *MultiFactor) GetPhoneNumber() string {
	return s.PhoneNumber
}

// SetFactorId sets the value of FactorId.
func (s *MultiFactor) SetFactorId(val string) {
	s.FactorId = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *MultiFactor) SetPhoneNumber(val string) {
	s.PhoneNumber = val
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptMultiFactor returns new OptMultiFactor with value set to v.
func NewOptMultiFactor(v MultiFactor) OptMultiFactor {
	return OptMultiFactor{
		Value: v,
		Set:   true,
	}
}

// OptMultiFactor is optional MultiFactor.
type OptMultiFactor struct {
	Value MultiFactor
	Set   bool
}

// IsSet returns true if OptMultiFactor was set.
func (o OptMultiFactor) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMultiFactor) Reset() {
	var v MultiFactor
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMultiFactor) SetTo(v MultiFactor) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMultiFactor) Get() (v MultiFactor, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptMultiFactor) Or(d MultiFactor) MultiFactor {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPingPostReq returns new OptPingPostReq with value set to v.
func NewOptPingPostReq(v PingPostReq) OptPingPostReq {
	return OptPingPostReq{
		Value: v,
		Set:   true,
	}
}

// OptPingPostReq is optional PingPostReq.
type OptPingPostReq struct {
	Value PingPostReq
	Set   bool
}

// IsSet returns true if OptPingPostReq was set.
func (o OptPingPostReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPingPostReq) Reset() {
	var v PingPostReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPingPostReq) SetTo(v PingPostReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPingPostReq) Get() (v PingPostReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPingPostReq) Or(d PingPostReq) PingPostReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// PingGetOK is response for PingGet operation.
type PingGetOK struct{}

func (*PingGetOK) pingGetRes() {}

// PingPostOK is response for PingPost operation.
type PingPostOK struct{}

func (*PingPostOK) pingPostRes() {}

type PingPostReq struct {
	// Name.
	Name string `json:"name"`
}

// GetName returns the value of Name.
func (s *PingPostReq) GetName() string {
	return s.Name
}

// SetName sets the value of Name.
func (s *PingPostReq) SetName(val string) {
	s.Name = val
}

type SignUpReq struct {
	// Name.
	Name string `json:"name"`
}

// GetName returns the value of Name.
func (s *SignUpReq) GetName() string {
	return s.Name
}

// SetName sets the value of Name.
func (s *SignUpReq) SetName(val string) {
	s.Name = val
}

// RFC7807 - https://datatracker.ietf.org/doc/html/rfc7807.
type UnauthorizedError struct {
	// The HTTP status code generated for this occurrence of the problem.
	Status OptInt `json:"status"`
	// Error type.
	Type OptString `json:"type"`
	// A short, human-readable summary of the problem type.
	Title OptString `json:"title"`
	// A human-readable explanation specific to this occurrence of the problem.
	Detail OptString `json:"detail"`
	// Error code.
	Code OptString `json:"code"`
}

// GetStatus returns the value of Status.
func (s *UnauthorizedError) GetStatus() OptInt {
	return s.Status
}

// GetType returns the value of Type.
func (s *UnauthorizedError) GetType() OptString {
	return s.Type
}

// GetTitle returns the value of Title.
func (s *UnauthorizedError) GetTitle() OptString {
	return s.Title
}

// GetDetail returns the value of Detail.
func (s *UnauthorizedError) GetDetail() OptString {
	return s.Detail
}

// GetCode returns the value of Code.
func (s *UnauthorizedError) GetCode() OptString {
	return s.Code
}

// SetStatus sets the value of Status.
func (s *UnauthorizedError) SetStatus(val OptInt) {
	s.Status = val
}

// SetType sets the value of Type.
func (s *UnauthorizedError) SetType(val OptString) {
	s.Type = val
}

// SetTitle sets the value of Title.
func (s *UnauthorizedError) SetTitle(val OptString) {
	s.Title = val
}

// SetDetail sets the value of Detail.
func (s *UnauthorizedError) SetDetail(val OptString) {
	s.Detail = val
}

// SetCode sets the value of Code.
func (s *UnauthorizedError) SetCode(val OptString) {
	s.Code = val
}

func (*UnauthorizedError) signUpRes() {}

// Ref: #/components/schemas/User
type User struct {
	UserId      uuid.UUID `json:"userId"`
	Email       string    `json:"email"`
	Name        string    `json:"name"`
	PhoneNumber OptString `json:"phoneNumber"`
}

// GetUserId returns the value of UserId.
func (s *User) GetUserId() uuid.UUID {
	return s.UserId
}

// GetEmail returns the value of Email.
func (s *User) GetEmail() string {
	return s.Email
}

// GetName returns the value of Name.
func (s *User) GetName() string {
	return s.Name
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *User) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// SetUserId sets the value of UserId.
func (s *User) SetUserId(val uuid.UUID) {
	s.UserId = val
}

// SetEmail sets the value of Email.
func (s *User) SetEmail(val string) {
	s.Email = val
}

// SetName sets the value of Name.
func (s *User) SetName(val string) {
	s.Name = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *User) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// Ref: #/components/schemas/Workspace
type Workspace struct {
	WorkspaceId uuid.UUID `json:"workspaceId"`
	Name        string    `json:"name"`
}

// GetWorkspaceId returns the value of WorkspaceId.
func (s *Workspace) GetWorkspaceId() uuid.UUID {
	return s.WorkspaceId
}

// GetName returns the value of Name.
func (s *Workspace) GetName() string {
	return s.Name
}

// SetWorkspaceId sets the value of WorkspaceId.
func (s *Workspace) SetWorkspaceId(val uuid.UUID) {
	s.WorkspaceId = val
}

// SetName sets the value of Name.
func (s *Workspace) SetName(val string) {
	s.Name = val
}
