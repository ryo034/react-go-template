// Code generated by ogen, DO NOT EDIT.

package openapi

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// HealthGet implements GET /health operation.
	//
	// Returns the health status of the system.
	//
	// GET /health
	HealthGet(ctx context.Context) (HealthGetRes, error)
	// MeGet implements GET /me operation.
	//
	// Returns the admin user.
	//
	// GET /me
	MeGet(ctx context.Context) (MeGetRes, error)
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h Handler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		baseServer: s,
	}, nil
}
